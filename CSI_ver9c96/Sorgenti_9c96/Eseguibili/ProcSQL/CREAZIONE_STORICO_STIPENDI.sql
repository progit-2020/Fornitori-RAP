CREATE OR REPLACE PROCEDURE CREAZIONE_STORICO_STIPENDI
  (NI IN NUMBER, DAL IN OUT DATE, P_AL IN DATE)
AS
  P INTEGER;
  FINEDEC DATE;
  DECOR DATE;
  NUOVODAL DATE;
  DATAMIN DATE;
--  DD DATE;
--  cursor_name INTEGER;
--  rows_processed INTEGER;
--  TRIGGER_T430 VARCHAR2(8);
  AL DATE;
BEGIN
  AL:=P_AL;
  IF DAL > TO_DATE('31/12/3999','dd/mm/yyyy') THEN
    RETURN;
  END IF;
  IF DAL IS NULL THEN
    SELECT MIN(DECORRENZA) INTO DAL FROM P430_ANAGRAFICO WHERE PROGRESSIVO = NI;
  END IF;
  NUOVODAL:=DAL;
  /*SE HO UN SOLO MOVIMENTO DI STORICIZZAZIONE CHE COMINCIA IL PRIMO DEL MESE,
  NON GENERO ALTRI MOVIMENTI STORICI DALLA REALE DATA DI ASSUNZIONE*/
  SELECT COUNT(*) INTO P FROM P430_ANAGRAFICO WHERE PROGRESSIVO = NI;
  IF P >= 1 THEN
    SELECT COUNT(*) INTO P FROM P430_ANAGRAFICO WHERE
      PROGRESSIVO = NI AND
      DECORRENZA = TO_DATE(TO_CHAR(DAL,'/mm/yyyy'),'/mm/yyyy') AND
      DECORRENZA = (SELECT MIN(DECORRENZA) FROM P430_ANAGRAFICO WHERE
                        PROGRESSIVO = NI);
    IF P = 1 THEN
      NUOVODAL:=TO_DATE(TO_CHAR(DAL,'/mm/yyyy'),'/mm/yyyy');
    END IF;
  END IF;
  /*Se il movimento storico inizia in corso di mese e non ci sono movimenti storici precedenti,
    forzo la decorrenza all'inizio del mese*/
  IF TO_CHAR(NUOVODAL,'DD') <> '01' THEN
    SELECT COUNT(*) INTO P FROM P430_ANAGRAFICO WHERE
      PROGRESSIVO = NI AND DECORRENZA < NUOVODAL;
    IF P = 0 THEN
      NUOVODAL:=TO_DATE(TO_CHAR(NUOVODAL,'/mm/yyyy'),'/mm/yyyy');
    END IF;
  END IF;
  IF AL >= TO_DATE('31/12/3999','dd/mm/yyyy') THEN
    AL:=NULL;
  END IF;
  IF (AL IS NULL) OR (P = 0) THEN
    FINEDEC:=TO_DATE('31/12/3999','dd/mm/yyyy');
  ELSE
    FINEDEC:=AL;
  END IF;
/*  SELECT NVL(MAX(STATUS),'DISABLED') INTO TRIGGER_T430 FROM USER_TRIGGERS WHERE TRIGGER_NAME = 'T430_AFTERUPDINS';
  --Disabilito il trigger usato per passare le variazioni di settore ad ADS
  IF TRIGGER_T430 = 'ENABLED' THEN
    begin
      cursor_name := dbms_sql.open_cursor;
      dbms_sql.parse(cursor_name, 'ALTER TRIGGER T430_AFTERUPDINS DISABLE',dbms_sql.NATIVE);
      rows_processed := dbms_sql.execute(cursor_name);
      dbms_sql.close_cursor(cursor_name);
    exception
      when others then
        dbms_sql.close_cursor(cursor_name);
    end;
  END IF;*/
  SELECT COUNT(*) INTO P FROM P430_ANAGRAFICO WHERE PROGRESSIVO = NI
    AND NUOVODAL BETWEEN DECORRENZA AND DECORRENZA_FINE;
  IF P = 0 THEN
    /*gestione del caso in cui si inserisce un movimento storico prima di quelli gi inseriti*/
    SELECT MIN(DECORRENZA) INTO DATAMIN FROM P430_ANAGRAFICO WHERE PROGRESSIVO = NI;
    IF DATAMIN IS NOT NULL AND DATAMIN > NUOVODAL THEN
      FINEDEC:=DATAMIN - 1;
    END IF;
    /*Creazione storico nuovo, da completare con valori di default*/
    DELETE FROM P430_APPOGGIO;
    INSERT INTO P430_APPOGGIO
      SELECT * FROM P430_ANAGRAFICO
       WHERE PROGRESSIVO = NI
         AND DECORRENZA = (SELECT MIN(DECORRENZA) FROM P430_ANAGRAFICO WHERE PROGRESSIVO = NI);
    UPDATE P430_APPOGGIO SET DECORRENZA = NUOVODAL,DECORRENZA_FINE = FINEDEC WHERE PROGRESSIVO = NI;
    INSERT INTO P430_ANAGRAFICO SELECT * FROM P430_APPOGGIO WHERE PROGRESSIVO = NI;
    IF SQL%ROWCOUNT = 0 THEN
      INSERT INTO P430_ANAGRAFICO
      (PROGRESSIVO,DECORRENZA,DECORRENZA_FINE)
      VALUES
      (NI,NUOVODAL,FINEDEC);
    END IF;
    DELETE FROM P430_APPOGGIO;
  ELSE
    /*Verifico se esiste una situazione storica con datadecorrenza = DAL*/
    SELECT COUNT(*) INTO P FROM P430_ANAGRAFICO WHERE PROGRESSIVO = NI
      AND DECORRENZA = NUOVODAL;
    IF P = 0 THEN
      DELETE FROM P430_APPOGGIO;
      INSERT INTO P430_APPOGGIO
        SELECT * FROM P430_ANAGRAFICO WHERE PROGRESSIVO = NI
          AND NUOVODAL BETWEEN DECORRENZA AND DECORRENZA_FINE;
      SELECT DECORRENZA INTO DECOR FROM P430_APPOGGIO WHERE PROGRESSIVO = NI;
      UPDATE P430_APPOGGIO SET DECORRENZA = NUOVODAL WHERE PROGRESSIVO = NI;
      INSERT INTO P430_ANAGRAFICO SELECT * FROM P430_APPOGGIO WHERE PROGRESSIVO = NI;
      UPDATE P430_ANAGRAFICO SET DECORRENZA_FINE = NUOVODAL - 1 WHERE PROGRESSIVO = NI
             AND DECORRENZA = DECOR;
      DELETE FROM P430_APPOGGIO;
    END IF;
  END IF;
--  COMMIT;
  IF AL IS NOT NULL THEN
    /*Verifico se esiste una situazione storica con datadecorrenza = AL + 1*/
    SELECT COUNT(*) INTO P FROM P430_ANAGRAFICO WHERE PROGRESSIVO = NI AND DECORRENZA = AL + 1;
    IF P = 0 THEN
      DELETE FROM P430_APPOGGIO;
      INSERT INTO P430_APPOGGIO
        SELECT * FROM P430_ANAGRAFICO WHERE PROGRESSIVO = NI
          AND AL BETWEEN DECORRENZA AND DECORRENZA_FINE;
      SELECT DECORRENZA INTO DECOR FROM P430_APPOGGIO WHERE PROGRESSIVO = NI;
      UPDATE P430_APPOGGIO SET DECORRENZA = AL  + 1 WHERE PROGRESSIVO = NI;
      INSERT INTO P430_ANAGRAFICO SELECT * FROM P430_APPOGGIO WHERE PROGRESSIVO = NI;
      UPDATE P430_ANAGRAFICO SET DECORRENZA_FINE = AL WHERE PROGRESSIVO = NI AND DECORRENZA = DECOR;
      DELETE FROM P430_APPOGGIO;
    END IF;
--    COMMIT;
  END IF;
  --Riabilito il trigger usato per passare le variazioni di settore ad ADS
/*  IF TRIGGER_T430 = 'ENABLED' THEN
    begin
      cursor_name := dbms_sql.open_cursor;
      dbms_sql.parse(cursor_name, 'ALTER TRIGGER T430_AFTERUPDINS ENABLE',dbms_sql.NATIVE);
      rows_processed := dbms_sql.execute(cursor_name);
      dbms_sql.close_cursor(cursor_name);
    exception
      when others then
        dbms_sql.close_cursor(cursor_name);
    end;
  END IF;*/
END;
/
