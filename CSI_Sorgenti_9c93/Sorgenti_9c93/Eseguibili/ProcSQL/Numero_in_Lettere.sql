CREATE OR REPLACE FUNCTION NUMERO_IN_LETTERE (NUM IN NUMBER) RETURN VARCHAR2 AS
  NUM_IN_LETTERE VARCHAR2(500);

-- TYPE ARRAY_CIFRE IS VARRAY(10) OF VARCHAR2(15) *** QUESTE ISTRUZIONI NON SONO VALIDE CON ORACLE 7.3
TYPE ARRAY_CIFRE IS TABLE OF VARCHAR2(15) INDEX BY BINARY_INTEGER; -- QUESTA ISTRUZIONE CON ORACLE 7.3 E SUCCESSIVI

UNITA ARRAY_CIFRE;
DECADE ARRAY_CIFRE;
DECINE ARRAY_CIFRE;
TERNA ARRAY_CIFRE;
PARTE_INTERA VARCHAR2(250);
PARTE_DECIMALE VARCHAR2(250);
NUM_STR VARCHAR2(250);
CIFRA VARCHAR2(3);
CIFRA2 VARCHAR2(3);
EMME VARCHAR2(15);
CONVERTITO VARCHAR2(500);
TRADUCI INTEGER;
NUM_TERNE INTEGER;
I INTEGER;
J INTEGER;
K INTEGER;

BEGIN
  IF NUM = 0 OR NUM IS NULL THEN
     RETURN 'zero';
  END IF;

--  UNITA:= ARRAY_CIFRE; *** QUESTE ISTRUZIONI NON SONO VALIDE CON ORACLE 7.3
--  UNITA.EXTEND(10); *** QUESTE ISTRUZIONI NON SONO VALIDE CON ORACLE 7.3
  UNITA(10):='zero';
  UNITA(1):='uno';
  UNITA(2):='due';
  UNITA(3):='tre';
  UNITA(4):='quattro';
  UNITA(5):='cinque';
  UNITA(6):='sei';
  UNITA(7):='sette';
  UNITA(8):='otto';
  UNITA(9):='nove';

--  DECADE:= ARRAY_CIFRE(); *** QUESTE ISTRUZIONI NON SONO VALIDE CON ORACLE 7.3
--  DECADE.EXTEND(10); *** QUESTE ISTRUZIONI NON SONO VALIDE CON ORACLE 7.3
  DECADE(10):='dieci';
  DECADE(1):='undici';
  DECADE(2):='dodici';
  DECADE(3):='tredici';
  DECADE(4):='quattordici';
  DECADE(5):='quindici';
  DECADE(6):='sedici';
  DECADE(7):='diciassette';
  DECADE(8):='diciotto';
  DECADE(9):='diciannove';

--  DECINE:= ARRAY_CIFRE(); *** QUESTE ISTRUZIONI NON SONO VALIDE CON ORACLE 7.3
--  DECINE.EXTEND(9); *** QUESTE ISTRUZIONI NON SONO VALIDE CON ORACLE 7.3
  DECINE(2):='venti';
  DECINE(3):='trenta';
  DECINE(4):='quaranta';
  DECINE(5):='cinquanta';
  DECINE(6):='sessanta';
  DECINE(7):='settanta';
  DECINE(8):='ottanta';
  DECINE(9):='novanta';

  -- CONTROLLO SE C'E' VIRGOLA O PUNTO --
  IF INSTR(TO_CHAR(NUM),'.') <> 0 THEN
     PARTE_INTERA:=SUBSTR(TO_CHAR(NUM),1,(INSTR(TO_CHAR(NUM),'.') - 1));
     IF PARTE_INTERA IS NULL THEN
       PARTE_INTERA:='0';
     END IF;
     PARTE_DECIMALE:=SUBSTR(TO_CHAR(NUM),(INSTR(TO_CHAR(NUM),'.') + 1),LENGTH(TO_CHAR(NUM)));
     TRADUCI:=2;
  ELSE
     IF INSTR(TO_CHAR(NUM),',') <> 0 THEN
        PARTE_INTERA:=SUBSTR(TO_CHAR(NUM),1,(INSTR(TO_CHAR(NUM),',') - 1));
        IF PARTE_INTERA IS NULL THEN
          PARTE_INTERA:='0';
        END IF;
        PARTE_DECIMALE:=SUBSTR(TO_CHAR(NUM),(INSTR(TO_CHAR(NUM),',') + 1),LENGTH(TO_CHAR(NUM)));
        TRADUCI:=2;
     ELSE
        PARTE_INTERA:=TO_CHAR(NUM);
        PARTE_DECIMALE:='';
        TRADUCI:=1;
     END IF;
  END IF;

  -- CICLO-TRADUCO DUE VOLTE: UNA VOLTA PER LA PARTE INTERA ED EVENTUALMENTE UN'ALTRA VOLTA PER LA PARTE DECIMALE --
  FOR I IN 1..TRADUCI LOOP
    IF I = 1 THEN
       NUM_STR:=PARTE_INTERA;
    ELSE
       IF NUM_IN_LETTERE IS NULL THEN
          NUM_IN_LETTERE:='zero';
       END IF;
       NUM_IN_LETTERE:=NUM_IN_LETTERE || ' virgola ';
       -- NELLA PARTE DECIMALE GLI ZERI IN TESTA SONO SIGNIFICATIVI: LI GESTISCO --
       WHILE SUBSTR(PARTE_DECIMALE,1,1) = '0' LOOP
         NUM_IN_LETTERE:=NUM_IN_LETTERE || 'zero';
         PARTE_DECIMALE:=SUBSTR(PARTE_DECIMALE,2,LENGTH(PARTE_DECIMALE));
       END LOOP;
       NUM_STR:=PARTE_DECIMALE;
    END IF;

    -- AGGIUNGE ZERI ALLA STRINGA COSI' LE TERNE SONO TUTTE LUNGHE UGUALE --
    WHILE (LENGTH(NUM_STR) MOD 3) <> 0 LOOP
      NUM_STR:='0' || NUM_STR;
    END LOOP;
    NUM_TERNE:=LENGTH(NUM_STR)/3;

    -- SUDDIVIDO IN GRUPPI DA TRE CIFRE (TERNE) E LI CARICO IN UN ARRAY --
    K:=(LENGTH(NUM_STR) - 2);
--    TERNA:= ARRAY_CIFRE(); *** QUESTE ISTRUZIONI NON SONO VALIDE CON ORACLE 7.3
    FOR J IN 1..NUM_TERNE LOOP
--      TERNA.EXTEND(J); *** QUESTE ISTRUZIONI NON SONO VALIDE CON ORACLE 7.3
      TERNA(J):=SUBSTR(NUM_STR,K,3);
      K:=K-3;
    END LOOP;

    -- QUI COMINCIA LA TRADUZIONE DELLE TERNE --
    J:=NUM_TERNE;
    WHILE J >= 1 LOOP
      CONVERTITO:='';
      -- PRIMA CIFRA DELLE TERNE (CENTINAIA) --
      IF TERNA(J) >= '100' THEN
         CIFRA:=SUBSTR(TERNA(J),1,1);
         IF CIFRA >= '2' THEN
            CONVERTITO:=UNITA(CIFRA);
         END IF;
         CONVERTITO:=CONVERTITO || 'cento';
      END IF;
      -- QUANDO DECINA E UNITA' SONO TRA 10 E 19 --
      CIFRA:=SUBSTR(TERNA(J),-2,2);
      IF CIFRA >= '10' AND CIFRA <= '19' THEN
        CIFRA2:=SUBSTR(TERNA(J),3,1);
        IF CIFRA2 = '0' THEN
           CIFRA2:='10';
        END IF;
        CONVERTITO:=CONVERTITO || DECADE(CIFRA2);
      END IF;
      -- QUANDO LA DECINA E' ZERO --
      IF CIFRA >= '01' AND CIFRA <= '09' THEN
         CIFRA2:=SUBSTR(TERNA(J),3,1);
         CONVERTITO:=CONVERTITO || UNITA(CIFRA2);
      END IF;
      -- QUANDO CI SONO LE DECINE --
      IF CIFRA >= '20' AND CIFRA <= '99' THEN
         CIFRA2:=SUBSTR(TERNA(J),2,1);
         CONVERTITO:=CONVERTITO || DECINE(CIFRA2);
         -- TOGLIE L'ULTIMA LETTERA PER EVITARE CACOFONIA CON UNO E OTTO --
        CIFRA2:=SUBSTR(TERNA(J),3,1);
        IF CIFRA2 <> '1' AND CIFRA2 <> '8' THEN
            IF CIFRA2 <> '0' THEN
               CONVERTITO:=CONVERTITO || UNITA(CIFRA2);
            END IF;
        ELSE
            CONVERTITO:=SUBSTR(CONVERTITO,1,(LENGTH(CONVERTITO) - 1)) || UNITA(CIFRA2);
        END IF;
      END IF;
      -- MILLE, MILIONE, MILIARDO --
      EMME:='';
      IF TERNA(J) = '001' THEN
         IF J=1 THEN
            EMME:='uno';
         ELSIF J=2 THEN
            EMME:='mille';
         ELSIF J=3 THEN
            EMME:='unmilione';
         ELSIF J=4 THEN
            EMME:='unmiliardo';
         END IF;
         CONVERTITO:=EMME;
      ELSE
         IF J=2 THEN
            EMME:='mila';
         ELSIF J=3 THEN
            EMME:='milioni';
         ELSIF J=4 THEN
            EMME:='miliardi';
         END IF;
         CONVERTITO:=CONVERTITO || EMME;
      END IF;
      IF NUM_IN_LETTERE IS NOT NULL THEN
        NUM_IN_LETTERE:=NUM_IN_LETTERE || ' ';
      END IF;
      NUM_IN_LETTERE:=NUM_IN_LETTERE || CONVERTITO;
      J:=J-1;
      -- LE TERNE DI 3 ZERI VANNO SALTATE --
      WHILE J >= 1 AND TERNA(J) = '000' LOOP
        J:=J-1;
      END LOOP;
    END LOOP;
  END LOOP;
  RETURN NUM_IN_LETTERE;
END;
/
