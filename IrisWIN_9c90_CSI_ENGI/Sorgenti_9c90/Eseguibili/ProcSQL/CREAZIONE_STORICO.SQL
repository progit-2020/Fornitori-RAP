CREATE OR REPLACE PROCEDURE CREAZIONE_STORICO
  (NI IN NUMBER, DAL IN OUT DATE, P_AL IN DATE)
AS
  P INTEGER;
  FINEDEC DATE;
  DECOR DATE;
  NUOVODAL DATE;
  DATAMIN DATE;
  dISTANTE DATE;
  AL DATE;
BEGIN
  dISTANTE:=NULL;
  AL:=P_AL;
  IF DAL > TO_DATE('31/12/3999','dd/mm/yyyy') THEN
    RETURN;
  END IF;
  IF DAL IS NULL THEN
    SELECT MIN(DATADECORRENZA) INTO DAL FROM T430_STORICO WHERE PROGRESSIVO = NI;
  END IF;
  NUOVODAL:=DAL;
  /*SE HO UN SOLO MOVIMENTO DI STORICIZZAZIONE CHE COMINCIA IL PRIMO DEL MESE,
  NON GENERO ALTRI MOVIMENTI STORICI DALLA REALE DATA DI ASSUNZIONE*/
  /* -- Remmato da Alberto 05/07/2006
  SELECT COUNT(*) INTO P FROM T430_STORICO WHERE PROGRESSIVO = NI;
  IF P >= 1 THEN
    SELECT COUNT(*) INTO P FROM T430_STORICO WHERE
      PROGRESSIVO = NI AND
      NUOVODAL < INIZIO AND  -- Controllo aggiunto da Nando il 15/03/2006
      DATADECORRENZA = TO_DATE(TO_CHAR(DAL,'/mm/yyyy'),'/mm/yyyy') AND
      DATADECORRENZA = (SELECT MIN(DATADECORRENZA) FROM T430_STORICO WHERE
                        PROGRESSIVO = NI);
    IF P = 1 THEN
      NUOVODAL:=TO_DATE(TO_CHAR(DAL,'/mm/yyyy'),'/mm/yyyy');
    END IF;
  END IF;
  */
  /*Se il movimento storico inizia in corso di mese e non ci sono movimenti storici precedenti,
    forzo la decorrenza all'inizio del mese*/
  /* -- Remmato da Alberto 05/07/2006
  IF TO_CHAR(NUOVODAL,'DD') <> '01' THEN
    SELECT COUNT(*) INTO P FROM T430_STORICO WHERE
      PROGRESSIVO = NI AND DATADECORRENZA < NUOVODAL;
    IF P = 0 THEN
      NUOVODAL:=TO_DATE(TO_CHAR(NUOVODAL,'/mm/yyyy'),'/mm/yyyy');
    END IF;
  END IF;
  */
  IF AL >= TO_DATE('31/12/3999','dd/mm/yyyy') THEN
    AL:=NULL;
  END IF;
  IF (AL IS NULL) OR (P = 0) THEN
    FINEDEC:=TO_DATE('31/12/3999','dd/mm/yyyy');
  ELSE
    FINEDEC:=AL;
  END IF;
  SELECT MIN(SYSDATE) INTO dISTANTE FROM DUAL;
  INSERT INTO T030_NOTRIGGER (PROGRESSIVO,ISTANTE) VALUES (NI,dISTANTE);
/*Sostituita la gestione dei triggers dall'uso di T030_NOTRIGGER
  SELECT NVL(MAX(STATUS),'DISABLED') INTO TRIGGER_T430 FROM USER_TRIGGERS WHERE TRIGGER_NAME = 'T430_AFTERUPDINS';
  --Disabilito il trigger usato per passare le variazioni di settore ad ADS
  IF TRIGGER_T430 = 'ENABLED' THEN
    begin
      cursor_name := dbms_sql.open_cursor;
      dbms_sql.parse(cursor_name, 'ALTER TRIGGER T430_AFTERUPDINS DISABLE',dbms_sql.NATIVE);
      rows_processed := dbms_sql.execute(cursor_name);
      dbms_sql.close_cursor(cursor_name);
    exception
      when others then
        dbms_sql.close_cursor(cursor_name);
    end;
  END IF;*/
  SELECT COUNT(*) INTO P FROM T430_STORICO WHERE PROGRESSIVO = NI
    AND NUOVODAL BETWEEN DATADECORRENZA AND DATAFINE;
  IF P = 0 THEN
    /*gestione del caso in cui si inserisce un movimento storico prima di quelli già inseriti*/
    SELECT MIN(DATADECORRENZA) INTO DATAMIN FROM T430_STORICO WHERE PROGRESSIVO = NI;
    IF DATAMIN IS NOT NULL AND DATAMIN > NUOVODAL THEN
      FINEDEC:=DATAMIN - 1;
    END IF;
    /*Creazione storico nuovo, da completare con valori di default*/
    DELETE FROM T430_APPOGGIO;
    INSERT INTO T430_APPOGGIO
      SELECT * FROM T430_STORICO
       WHERE PROGRESSIVO = NI
         AND DATADECORRENZA = (SELECT MIN(DATADECORRENZA) FROM T430_STORICO WHERE PROGRESSIVO = NI);
    UPDATE T430_APPOGGIO SET DATADECORRENZA = NUOVODAL,DATAFINE = FINEDEC WHERE PROGRESSIVO = NI;
    INSERT INTO T430_STORICO SELECT * FROM T430_APPOGGIO WHERE PROGRESSIVO = NI;
    IF SQL%ROWCOUNT = 0 THEN
      INSERT INTO T430_STORICO
      (PROGRESSIVO,DATADECORRENZA,DATAFINE)
      VALUES
      (NI,NUOVODAL,FINEDEC);
    END IF;
    DELETE FROM T430_APPOGGIO;
  ELSE
    /*Verifico se esiste una situazione storica con datadecorrenza = DAL*/
    SELECT COUNT(*) INTO P FROM T430_STORICO WHERE PROGRESSIVO = NI
      AND DATADECORRENZA = NUOVODAL;
    IF P = 0 THEN
      DELETE FROM T430_APPOGGIO;
      INSERT INTO T430_APPOGGIO
        SELECT * FROM T430_STORICO WHERE PROGRESSIVO = NI
          AND NUOVODAL BETWEEN DATADECORRENZA AND DATAFINE;
      SELECT DATADECORRENZA INTO DECOR FROM T430_APPOGGIO WHERE PROGRESSIVO = NI;
      UPDATE T430_APPOGGIO SET DATADECORRENZA = NUOVODAL WHERE PROGRESSIVO = NI;
      INSERT INTO T430_STORICO SELECT * FROM T430_APPOGGIO WHERE PROGRESSIVO = NI;
      UPDATE T430_STORICO SET DATAFINE = NUOVODAL - 1 WHERE PROGRESSIVO = NI
             AND DATADECORRENZA = DECOR;
      DELETE FROM T430_APPOGGIO;
    END IF;
  END IF;
--  COMMIT;
  IF AL IS NOT NULL THEN
    /*Verifico se esiste una situazione storica con datadecorrenza = AL + 1*/
    SELECT COUNT(*) INTO P FROM T430_STORICO WHERE PROGRESSIVO = NI AND DATADECORRENZA = AL + 1;
    IF P = 0 THEN
      DELETE FROM T430_APPOGGIO;
      INSERT INTO T430_APPOGGIO
        SELECT * FROM T430_STORICO WHERE PROGRESSIVO = NI
          AND AL BETWEEN DATADECORRENZA AND DATAFINE;
      SELECT DATADECORRENZA INTO DECOR FROM T430_APPOGGIO WHERE PROGRESSIVO = NI;
      UPDATE T430_APPOGGIO SET DATADECORRENZA = AL  + 1 WHERE PROGRESSIVO = NI;
      INSERT INTO T430_STORICO SELECT * FROM T430_APPOGGIO WHERE PROGRESSIVO = NI;
      UPDATE T430_STORICO SET DATAFINE = AL WHERE PROGRESSIVO = NI AND DATADECORRENZA = DECOR;
      DELETE FROM T430_APPOGGIO;
    END IF;
--    COMMIT;
  END IF;
  DELETE FROM T030_NOTRIGGER WHERE PROGRESSIVO = NI AND ISTANTE = dISTANTE;
/*  --Riabilito il trigger usato per passare le variazioni di settore ad ADS
  IF TRIGGER_T430 = 'ENABLED' THEN
    begin
      cursor_name := dbms_sql.open_cursor;
      dbms_sql.parse(cursor_name, 'ALTER TRIGGER T430_AFTERUPDINS ENABLE',dbms_sql.NATIVE);
      rows_processed := dbms_sql.execute(cursor_name);
      dbms_sql.close_cursor(cursor_name);
    exception
      when others then
        dbms_sql.close_cursor(cursor_name);
    end;
  END IF;*/
EXCEPTION
  WHEN OTHERS THEN
    IF dISTANTE IS NOT NULL THEN
      DELETE FROM T030_NOTRIGGER WHERE PROGRESSIVO = NI AND ISTANTE = dISTANTE;
    END IF;
END;
/
