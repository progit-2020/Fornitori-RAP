UPDATE MONDOEDP.I090_ENTI SET VERSIONEDB = '6.0.0' WHERE AZIENDA = :AZIENDA;

ALTER TABLE T020_ORARI ADD ARROT_COMP VARCHAR2(1) DEFAULT 'N';

ALTER TABLE T025_CONTMENSILI ADD ARRREC_COMPPREC VARCHAR2(5);
ALTER TABLE T025_CONTMENSILI ADD ARRREC_LIQPREC VARCHAR2(5);
ALTER TABLE T025_CONTMENSILI ADD ARRREC_COMPATT VARCHAR2(5);
ALTER TABLE T025_CONTMENSILI ADD ARRREC_LIQATT VARCHAR2(5);
ALTER TABLE T025_CONTMENSILI ADD BANCA_ORE_ESCLUSA_ABBATT VARCHAR2(1) DEFAULT 'N';

DROP TABLE P272_RETRIBUZIONE_CONTRATTUALE;
/*
Storico retribuzione contrattuale del dipendente
Integrità referenziali: T030_ANAGRAFICO
*/
CREATE TABLE P272_RETRIBUZIONE_CONTRATTUALE (
  PROGRESSIVO NUMBER,
  COD_CONTRATTO VARCHAR2(5),
  COD_VOCE VARCHAR2(5),
  COD_VOCE_SPECIALE VARCHAR2(5),
  DECORRENZA_INIZIO DATE,
  ID_VOCE_PROGRAMMATA NUMBER,
  DECORRENZA_FINE DATE,
  IMPORTO NUMBER,
  IMPORTO_INTERO NUMBER,
  ORIGINE VARCHAR2(1) NOT NULL,
  STATO VARCHAR2(1) DEFAULT 'A' NOT NULL,
  TIPO_VOCE VARCHAR2(1) NOT NULL,
  CONSTRAINT P272_PK PRIMARY KEY (PROGRESSIVO,COD_CONTRATTO,COD_VOCE,COD_VOCE_SPECIALE,DECORRENZA_INIZIO,ID_VOCE_PROGRAMMATA,ORIGINE)
  USING INDEX STORAGE (pctincrease 0 initial 32K next 512K)
  TABLESPACE INDICI pctfree 10
)
STORAGE (pctincrease 0 initial 32K next 512K)
TABLESPACE LAVORO pctfree 10 pctused 40;

COMMENT ON COLUMN P272_RETRIBUZIONE_CONTRATTUALE.IMPORTO IS
  'Importo della voce gia'' ridotto per Part-time';
COMMENT ON COLUMN P272_RETRIBUZIONE_CONTRATTUALE.IMPORTO_INTERO IS
  'Importo della voce prima della riduzione per Part-time';
COMMENT ON COLUMN P272_RETRIBUZIONE_CONTRATTUALE.ORIGINE IS
  'Origine della voce: M=da inserimento manuale, R=da Recupero dati, C=da Calcolo';
COMMENT ON COLUMN P272_RETRIBUZIONE_CONTRATTUALE.STATO IS
  'Stato della voce: A=Aggiornabile, B=Bloccata';
COMMENT ON COLUMN P272_RETRIBUZIONE_CONTRATTUALE.TIPO_VOCE IS
  'Tipo voce: E=voce di posizione economica, A=voce aggiuntiva, P=voce programmata';
ALTER TABLE P272_RETRIBUZIONE_CONTRATTUALE ADD CONSTRAINT P272_FK_T030
  FOREIGN KEY (PROGRESSIVO) REFERENCES T030_ANAGRAFICO;

ALTER TABLE T265_CAUASSENZE ADD FRUIZCOMPETENZE_ARR VARCHAR2(5);

ALTER TABLE T025_CONTMENSILI ADD RECUP_STRAORD_PREC VARCHAR2(1) DEFAULT 'N';

create table P445_CEDOLINOTEMP
(
  COD_CEDOLINOTEMP VARCHAR2(5) not null,
  DESCRIZIONE      VARCHAR2(40),
  DATA_RIFERIMENTO DATE,
  NOTE             LONG
)
tablespace LAVORO
  pctfree 10
  pctused 40
  initrans 1
  maxtrans 255
  storage
  (
    initial 280K
    minextents 1
  );
alter table P445_CEDOLINOTEMP
  add constraint P445_PK primary key (COD_CEDOLINOTEMP)
  using index 
  tablespace INDICI
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 80K
    minextents 1
  );
create table P446_CEDOLINOTEMPVOCI
(
  COD_CEDOLINOTEMP      VARCHAR2(5) not null,
  PROGRESSIVO           NUMBER not null,
  TIPO_RECORD           VARCHAR2(1),
  COD_CONTRATTO         VARCHAR2(5),
  COD_VOCE              VARCHAR2(5),
  COD_VOCE_SPECIALE     VARCHAR2(5),
  ID_VOCE               NUMBER default 0,
  QUANTITA              VARCHAR2(10),
  DATOBASE              VARCHAR2(15),
  IMPORTO               NUMBER,
  IMPORTO_INTERO        NUMBER,
  DATA_COMPETENZA_QUOTE DATE,
  DATA_COMPETENZA_DA    DATE,
  DATA_COMPETENZA_A     DATE,
  ECCEZIONI             VARCHAR2(5),
  ID_VOCE_PROGRAMMATA   NUMBER,
  STATO                 VARCHAR2(2) default 'DI' not null
)
tablespace LAVORO
  pctfree 10
  pctused 40
  initrans 1
  maxtrans 255
  storage
  (
    initial 2360K
    minextents 1
  );
comment on column P446_CEDOLINOTEMPVOCI.TIPO_RECORD
  is 'Tipo record: A=Automatico; M=Manuale';
comment on column P446_CEDOLINOTEMPVOCI.QUANTITA
  is 'Ore / Giorni / % / Quantità';
comment on column P446_CEDOLINOTEMPVOCI.DATOBASE
  is 'Valore da stampare nella colonna Dato base. Può essere importo unitario,imponibile o altro';
comment on column P446_CEDOLINOTEMPVOCI.IMPORTO_INTERO
  is 'Importo della voce prima della riduzione per Part-time e per assunzione/cessazione oppure importo prima dell''arrotondamento del calcolo';
comment on column P446_CEDOLINOTEMPVOCI.DATA_COMPETENZA_QUOTE
  is 'Anno e mese di competenza per il calcolo delle quote';
comment on column P446_CEDOLINOTEMPVOCI.DATA_COMPETENZA_DA
  is 'Inizio periodo di competenza per la voce';
comment on column P446_CEDOLINOTEMPVOCI.DATA_COMPETENZA_A
  is 'Fine periodo di competenza per la voce';
comment on column P446_CEDOLINOTEMPVOCI.ECCEZIONI
  is 'Eccezioni di calcolo a cui sottoporre la voce';
comment on column P446_CEDOLINOTEMPVOCI.STATO
  is 'Stato del dato: DI=Da imputare, IM=Importato su cedolino';
alter table P446_CEDOLINOTEMPVOCI
  add constraint P446_FK_P200 foreign key (ID_VOCE)
  references P200_VOCI (ID_VOCE);
alter table P446_CEDOLINOTEMPVOCI
  add constraint P446_FK_P445 foreign key (COD_CEDOLINOTEMP)
  references P445_CEDOLINOTEMP (COD_CEDOLINOTEMP) on delete cascade;

UPDATE sg509_dettagliostampa SET VALORI = REPLACE(VALORI,',',';');
ALTER TABLE SG508_STAMPAPIANTA ADD TABULAZIONE NUMBER DEFAULT 0 NOT NULL;
ALTER TABLE SG508_STAMPAPIANTA ADD ORDINAMENTO NUMBER(1) DEFAULT 0 NOT NULL;
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_ANOMALIE_POSTI', 0, 'SELECT SG504.DATA, SG504.ATTO, SG504.STRUTTURA_RIFERIMENTO, SG506.PERCORSO, SG506.NUMERO_POSTI, SG506.NUMERO_CALCOLATI, SG506.NUMERO_PERCENTUALE, SG506.ID_RAMO,SG506.ID_PIANTA');
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_ANOMALIE_POSTI', 1, ' FROM SG506_PIANTADISTRIBUZIONE SG506, SG504_PIANTAORGANICA SG504');
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_ANOMALIE_POSTI', 2, 'WHERE SG506.LIVELLO < (SELECT MAX(LIVELLO) FROM SG506_PIANTADISTRIBUZIONE)');
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_ANOMALIE_POSTI', 3, '  AND SG506.NUMERO_POSTI > 0');
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_ANOMALIE_POSTI', 4, '  AND SG506.ID_PIANTA = SG504.ID_PIANTA');
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_NODI_DA_DETTAGLIARE', 0, 'SELECT SG504.DATA, SG504.ATTO, SG506.PERCORSO, SG506.ID_RAMO,SG506.ID_PIANTA');
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_NODI_DA_DETTAGLIARE', 1, ' FROM SG506_PIANTADISTRIBUZIONE SG506, SG504_PIANTAORGANICA SG504');
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_NODI_DA_DETTAGLIARE', 2, 'WHERE SG506.LIVELLO < (SELECT MAX(LIVELLO) FROM SG506_PIANTADISTRIBUZIONE)');
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_NODI_DA_DETTAGLIARE', 3, '  AND NOT EXISTS (SELECT * FROM SG506_PIANTADISTRIBUZIONE WHERE ID_PADRE = SG506.ID_RAMO)');
insert into T002_QUERYPERSONALIZZATE (NOME, POSIZ, RIGA)
values ('PO_NODI_DA_DETTAGLIARE', 4, '  AND SG506.ID_PIANTA = SG504.ID_PIANTA');

ALTER TABLE MONDOEDP.I070_UTENTI ADD NUOVA_PASSWORD VARCHAR2(1) DEFAULT 'N';
ALTER TABLE MONDOEDP.I090_ENTI ADD VALID_UTENTE NUMBER(3) DEFAULT 0;
ALTER TABLE MONDOEDP.I070_UTENTI ADD DATA_ACCESSO DATE DEFAULT TRUNC(SYSDATE);

-- E' necessario eseguire i seguenti comandi come utente SYS:
-- GRANT SELECT ON V_$SESSION TO PUBLIC;
-- GRANT SELECT ON V_$MYSTAT TO PUBLIC;
CREATE OR REPLACE TRIGGER T030_AFTERINS_I060
  after insert on T030_ANAGRAFICO  
  for each row
declare
azienda varchar2(50);
begin
  SELECT AZIENDA INTO azienda FROM V$SESSION V, MONDOEDP.I090_ENTI I090  
  WHERE V.SID = (SELECT MAX(SID) FROM V$MYSTAT) AND V.USERNAME = I090.UTENTE;
  INSERT INTO I060_LOGIN_DIPENDENTE (MATRICOLA,NOME_UTENTE,DATA_PW,AZIENDA)
  VALUES(:NEW.MATRICOLA,:NEW.MATRICOLA,TRUNC(SYSDATE),azienda);
end T030_AFTERINS_I060;
/

ALTER TRIGGER T030_AFTERINS_I060 DISABLE;

ALTER TABLE MONDOEDP.I070_UTENTI ADD ACCESSO_NEGATO VARCHAR2(1) DEFAULT 'N';

ALTER TABLE T020_ORARI ADD ARR_TIMB_INTERNE VARCHAR2(1) DEFAULT 'N';
UPDATE T020_ORARI SET ARR_TIMB_INTERNE = 'S';

