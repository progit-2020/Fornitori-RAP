CREATE OR REPLACE PROCEDURE CANCASSENZE
(P IN NUMBER, D1 IN DATE, D2 IN DATE, C IN VARCHAR2) AS
--dichiaro record T040
  type REC_T040 is record
  (PROG integer,
   CAUS varchar2(5),
   TIPO varchar2(1),
   ORE1 date,
   ORE2 date);
--dichiaro array T040
  type ARR_T040 is varray(1000000) of REC_T040;
  TEMP_T040 ARR_T040;
  CURSOR C1 IS
    SELECT CAUSALE,DATA,ROWID FROM T040_GIUSTIFICATIVI 
     WHERE DATA BETWEEN D1 AND D2;
  CURSOR C2 IS
    SELECT CAUSALE,DATA,ROWID FROM T040_GIUSTIFICATIVI
     WHERE DATA BETWEEN D1 AND D2 AND PROGRESSIVO = P;
  CURSOR C3 IS
    SELECT CAUSALE,DATA,ROWID FROM T040_GIUSTIFICATIVI
     WHERE DATA BETWEEN D1 AND D2 AND CAUSALE = C;
  CURSOR C4 IS
    SELECT CAUSALE,DATA,ROWID FROM T040_GIUSTIFICATIVI
     WHERE DATA BETWEEN D1 AND D2 AND CAUSALE = C AND PROGRESSIVO = P;
  cursor C5 is 
    select distinct T040.PROGRESSIVO, T040.TIPOGIUST, T040.DAORE, T040.AORE, T040.CAUSALE
      from T040_GIUSTIFICATIVI T040, T265_CAUASSENZE T265
     where T265.CODICE = T040.CAUSALE
       and T265.VOCEPAGHE is not null
       and T265.TIPOCUMULO <> 'T'
       and T040.DATA between D1 and D2
       and T040.PROGRESSIVO = nvl(decode(P,0,null,P),T040.PROGRESSIVO)
       and T040.CAUSALE = nvl(trim(C),T040.CAUSALE);
  --V NUMBER;
  I INTEGER;  
BEGIN
  TEMP_T040:=ARR_T040(null);
  for T1 in C5 loop
    TEMP_T040.EXTEND;    
    TEMP_T040(TEMP_T040.LAST).PROG:=T1.PROGRESSIVO;
    TEMP_T040(TEMP_T040.LAST).CAUS:=T1.CAUSALE;
    TEMP_T040(TEMP_T040.LAST).TIPO:=T1.TIPOGIUST;
    TEMP_T040(TEMP_T040.LAST).ORE1:=T1.DAORE;
    TEMP_T040(TEMP_T040.LAST).ORE2:=T1.AORE;       
  end loop;
  IF P = 0 THEN
    IF C IS NULL THEN     
      FOR T1 IN C1 LOOP
        BEGIN
        --SELECT AVALIDASS INTO V FROM T265_CAUASSENZE WHERE CODICE = T1.CAUSALE;
        --IF V = 0 OR V IS NULL THEN
          DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        --ELSIF TO_NUMBER(TO_CHAR(T1.DATA,'YYYY')) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) - V THEN
        --  DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        --END IF;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        END;        
        COMMIT;
      END LOOP;
    ELSE
      FOR T1 IN C3 LOOP
        BEGIN
        --SELECT AVALIDASS INTO V FROM T265_CAUASSENZE WHERE CODICE = T1.CAUSALE;
        --IF V = 0 OR V IS NULL THEN
          DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        --ELSIF TO_NUMBER(TO_CHAR(T1.DATA,'YYYY')) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) - V THEN
        --  DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        --END IF;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        END;
        COMMIT;
      END LOOP;
    END IF;
  ELSE
    IF C IS NULL THEN
      FOR T1 IN C2 LOOP
        BEGIN
        --SELECT AVALIDASS INTO V FROM T265_CAUASSENZE WHERE CODICE = T1.CAUSALE;
        --IF V = 0 OR V IS NULL THEN
          DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        --ELSIF TO_NUMBER(TO_CHAR(T1.DATA,'YYYY')) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) - V THEN
        --  DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        --END IF;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        END;
        COMMIT;
      END LOOP;
    ELSE
      FOR T1 IN C4 LOOP
        BEGIN
        --SELECT AVALIDASS INTO V FROM T265_CAUASSENZE WHERE CODICE = T1.CAUSALE;
        --IF V = 0 OR V IS NULL THEN
          DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        --ELSIF TO_NUMBER(TO_CHAR(T1.DATA,'YYYY')) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) - V THEN
        --  DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        --END IF;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            DELETE FROM T040_GIUSTIFICATIVI WHERE ROWID = T1.ROWID;
        END;
        COMMIT;
      END LOOP;
    END IF;
  END IF;
  for I in TEMP_T040.FIRST .. TEMP_T040.COUNT loop
    GENERA_PERIODI_ASSENZA(TEMP_T040(I).PROG, D1, D2, 
                           TEMP_T040(I).CAUS, 
                           TEMP_T040(I).TIPO, 
                           to_char(TEMP_T040(I).ORE1,'HH24.MI'), 
                           to_char(TEMP_T040(I).ORE2,'HH24.MI'), 'C');
    commit;
  end loop;      
  TEMP_T040.delete;
END;
/
