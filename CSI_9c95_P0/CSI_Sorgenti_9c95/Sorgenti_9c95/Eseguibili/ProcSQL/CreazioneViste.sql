ALTER VIEW V430_STORICO COMPILE/*--NOLOG--*/;
ALTER PACKAGE SELECT_APERTE COMPILE BODY;
ALTER PACKAGE SELECT_APERTE COMPILE;
/*RECOMPILE V430_STORICO;
RECOMPILE SELECT_APERTE;*/

create or replace view VI000_I001_LOG as
select I000.*,I001.COLONNA,I001.VALORE_OLD,I001.VALORE_NEW
from I000_LOGINFO I000, I001_LOGDATI I001
where I000.ID = I001.ID;

create or replace view VI005_I006_MSGELABORAZIONI as
select I005.*,I006.AZIENDA_MSG, I006.DATA_MSG, I006.TIPO, I006.MSG, I006.PROGRESSIVO, I006.ID_MSG
from MONDOEDP.I005_MSGINFO I005, MONDOEDP.I006_MSGDATI I006 
where I005.ID = I006.ID;

CREATE OR REPLACE VIEW V042_PERIODIASSENZA AS
SELECT
  T030.MATRICOLA,
  T042.CAUSALE,T042.DAL,T042.AL,T042.TIPOGIUST,T042.DAORE,T042.AORE,T042.OPERAZIONE,T042.DATA_AGG,T042.ID,
  T265.VOCEPAGHE
  FROM T030_ANAGRAFICO T030, T042_PERIODIASSENZA T042, T265_CAUASSENZE T265
  WHERE
  T030.PROGRESSIVO = T042.PROGRESSIVO AND
  T042.CAUSALE = T265.CODICE AND
  T265.VOCEPAGHE IS NOT NULL;

create or replace view V010_CALENDARI as
select T430.PROGRESSIVO, T011.DATA,
       nvl(substr(T012F_DATI(T430.PROGRESSIVO,T011.DATA,'FESTIVO'),1,1),T011.FESTIVO) FESTIVO,
       nvl(substr(T012F_DATI(T430.PROGRESSIVO,T011.DATA,'LAVORATIVO'),1,1),T011.LAVORATIVO) LAVORATIVO,
       nvl(to_number(T012F_DATI(T430.PROGRESSIVO,T011.DATA,'NUMGIORNI')),T011.NUMGIORNI) NUMGIORNI,
       T011.CODICE CODICE
  from T011_CALENDARI T011,T430_STORICO T430
 where T011.CODICE = T430.CALENDARIO 
   and T011.DATA between T430.DATADECORRENZA and T430.DATAFINE;

create or replace view VT230_CAUASSENZE_PARSTO as
select 
  T265.CODICE,T230.* 
from T230_CAUASSENZE_PARSTO T230, T265_CAUASSENZE T265
where T230.ID = T265.ID;

create or replace view VT235_CAUPRESENZE_PARSTO as
select
  T275.CODICE,T235.*
from T235_CAUPRESENZE_PARSTO T235, T275_CAUPRESENZE T275
where T235.ID = T275.ID;

create or replace view VT251_RICHIESTESCIOPERI as
  select T250.ID ID_T250, T250.DATA, T250.CAUSALE, T265.DESCRIZIONE D_CAUSALE, 
         T250.TIPOGIUST, T250.DAORE, T250.AORE,T250.SELEZIONE_ANAGRAFICA,
         T251.ID, T251.PROGRESSIVO, T251.MINIMO, T251.ROWID ROWID_T
  from   T250_SCIOPERI T250, 
         T251_SCIOPERI_STRUTTURA T251,
         T265_CAUASSENZE T265
  where  T250.ID = T251.ID_T250
  and    T250.CAUSALE = T265.CODICE(+);

create or replace view VT850_T851 as
select
  --T850F_PROGRESSIVO(T850.ITER,T850.ID) PROGRESSIVO,
  T850.ID,T850.ITER,T850.COD_ITER,T850.DATA,T850.NOTE,T850.STATO,T850.TIPO_RICHIESTA,T850.AUTORIZZ_AUTOMATICA,T850.ID_REVOCA,T850.ID_REVOCATO,
  T851.LIVELLO T851LIVELLO,
  T851.DATA T851DATA,
  T851.RESPONSABILE T851RESPONSABILE,
  I060F_NOMINATIVO(T000F_GETAZIENDACORRENTE,T851.RESPONSABILE) T851NOME_RESPONSABILE,
  T851.NOTE T851NOTE,
  T851.STATO T851STATO,
  T851.AUTORIZZ_AUTOMATICA T851AUTORIZZ_AUTOMATICA
from T851_ITER_AUTORIZZAZIONI T851, T850_ITER_RICHIESTE T850
where T850.ID = T851.ID(+);

create or replace view VT850_T851_UL as
select
  --T850F_PROGRESSIVO(T850.ITER,T850.ID) PROGRESSIVO,
  T850.ID,T850.ITER,T850.COD_ITER,T850.DATA,T850.NOTE,T850.STATO,T850.TIPO_RICHIESTA,T850.AUTORIZZ_AUTOMATICA,T850.RICHIEDENTE,T850.ID_REVOCA,T850.ID_REVOCATO,
  nvl(T850.CONDIZ_ALLEGATI,'N') CONDIZ_ALLEGATI,
	T851.LIVELLO T851LIVELLO,
  T851.DATA T851DATA,
  T851.RESPONSABILE T851RESPONSABILE,
  I060F_NOMINATIVO(I090F_GETAZIENDACORRENTE,T851.RESPONSABILE) T851NOME_RESPONSABILE,
  T851.NOTE T851NOTE,
  T851.STATO T851STATO,
  T851.AUTORIZZ_AUTOMATICA T851AUTORIZZ_AUTOMATICA
from T851_ITER_AUTORIZZAZIONI T851, T850_ITER_RICHIESTE T850
where T850.ID = T851.ID(+)
and   T851.LIVELLO(+) = I096F_ULTIMOLIV_FASE(I093F_ULTIMAFASE(T850.ITER),T850.ITER,T850.COD_ITER);

create or replace view vt850_t851_ul_a077 as
select
  PROGRESSIVO PROGRESSIVO25,
  DAL IA_DAL,
  AL IA_AL,
  ID IA_ID,
  ITER IA_ITER,
  COD_ITER IA_STRUTTURA_ITER,
  DATA IA_DATA_RICHIESTA,
  NOTE IA_NOTE_RICHIESTA,
  STATO IA_STATO_RICHIESTA,
  TIPO_RICHIESTA IA_TIPO_RICHIESTA,
  AUTORIZZ_AUTOMATICA IA_RICHIESTA_AUTOMATICA,
  ID_REVOCA IA_REVOCA,
  ID_REVOCATO IA_REVOCATO,
  T851LIVELLO IA_LIVELLO_AUTORIZZAZIONE,
  T851DATA IA_DATA_AUTORIZZAZIONE,
  T851NOME_RESPONSABILE IA_AUTORIZZATORE,
  T851NOTE IA_NOTE_AUTORIZZAZIONE,
  T851STATO IA_AUTORIZZAZIONE,
  T851AUTORIZZ_AUTOMATICA IA_AUTORIZZ_AUTOMATICA,
  lpad(' ',5,' ') IA_T050_CAUSALE,
  lpad(' ',40,' ') IA_T050_D_CAUSALE,
  lpad(' ',1,' ') IA_T050_TIPO,
  lpad(' ',5,' ') IA_T050_DAORE,
  lpad(' ',5,' ') IA_T050_AORE,
  to_date(null)   IA_T050_DATANASCITA,
  lpad(' ',1,' ') IA_T050_ELABORATO,
  lpad(' ',1,' ') IA_T050_TIPO_RICHIESTA,
  lpad(' ',1,' ') IA_T065_TIPO,
  to_number(null) IA_T065_IDCONGUAGLIO,
  to_number(null) IA_T065_ECCED_CALC,
  to_number(null) IA_T065_ECCED_RICH,
  to_number(null) IA_T065_COMP_RICH,
  to_number(null) IA_T065_LIQ_RICH,
  to_number(null) IA_T065_ECCED_AUT,
  to_number(null) IA_T065_COMP_AUT,
  to_number(null) IA_T065_LIQ_AUT,
  lpad(' ',1,' ') IA_T085_TIPOGIORNO_ORIG,
  lpad(' ',5,' ') IA_T085_ORARIO_ORIG,
  to_date(null)   IA_T085_GIORNO_RICH,
  lpad(' ',1,' ') IA_T085_TIPOGIORNO_RICH,
  lpad(' ',5,' ') IA_T085_ORARIO_RICH,
  lpad(' ',1,' ') IA_T105_OPERAZIONE,
  lpad(' ',5,' ') IA_T105_CAUS_ORIG,
  lpad(' ',5,' ') IA_T105_CAUSALE,
  lpad(' ',1,' ') IA_T105_VERSO_ORIG,
  lpad(' ',1,' ') IA_T105_VERSO,
  lpad(' ',5,' ') IA_T105_ORA,
  lpad(' ',1,' ') IA_T105_ELABORATO,
  lpad(' ',20,' ')  IA_T755_PROGETTO,
  lpad(' ',100,' ') IA_T755_D_PROGETTO,
  to_number(null)   IA_T755_ID_PROGETTO,
  lpad(' ',10,' ')  IA_T755_ATTIVITA,
  lpad(' ',100,' ') IA_T755_D_ATTIVITA,
  to_number(null)   IA_T755_ID_ATTIVITA,
  lpad(' ',10,' ')  IA_T755_TASK,
  lpad(' ',100,' ') IA_T755_D_TASK,
  to_number(null)   IA_T755_ID_TASK,
  to_number(null)   IA_T755_ORE_RENDICONTATE
from (
  select T_ITER.PROGRESSIVO,T_ITER.DAL,T_ITER.AL,VT850.*
  from VT850_T851_UL VT850, T050_RICHIESTEASSENZA T_ITER
  where VT850.ITER = 'T050'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,trunc(T_ITER.DATA,'mm') DAL,last_day(T_ITER.DATA) AL,VT850.*
  from VT850_T851_UL VT850, T065_RICHIESTESTRAORDINARI T_ITER
  where VT850.ITER = 'T065'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,trunc(T_ITER.DATA,'mm') DAL,last_day(T_ITER.DATA) AL,VT850.*
  from VT850_T851_UL VT850, T085_RICHIESTECAMBIORARI T_ITER
  where VT850.ITER = 'T085'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,T_ITER.DATA DAL,T_ITER.DATA AL,VT850.*
  from VT850_T851_UL VT850, T105_RICHIESTETIMBRATURE T_ITER
  where VT850.ITER = 'T105'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,T_ITER.DATA DAL,T_ITER.DATA AL,VT850.*
  from VT850_T851_UL VT850, T325_RICHIESTESTR_GG T_ITER, T326_RICHIESTESTR_SPEZ T326
  where VT850.ITER = 'T325'
  and VT850.ID = T326.ID_T850
  and T326.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,T_ITER.DATA DAL,T_ITER.DATA AL,VT850.*
  from VT850_T851_UL VT850, T755_RICHIESTE_RENDICONTO T_ITER
  where VT850.ITER = 'T755'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,T_ITER.MESE_CARTELLINO DAL,T_ITER.MESE_CARTELLINO AL,VT850.*
  from VT850_T851_UL VT850, T860_ITER_STAMPACARTELLINI T_ITER
  where VT850.ITER = 'T860'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,T_ITER.DATADA DAL,T_ITER.DATAA AL,VT850.*
  from VT850_T851_UL VT850, M140_RICHIESTE_MISSIONI T_ITER
  where VT850.ITER = 'M140'
  and VT850.ID = T_ITER.ID
);

create or replace view vt850_t851_a077 as
select
  PROGRESSIVO PROGRESSIVO25,
  DAL IA_DAL,
  AL IA_AL,
  ID IA_ID,
  ITER IA_ITER,
  COD_ITER IA_STRUTTURA_ITER,
  DATA IA_DATA_RICHIESTA,
  NOTE IA_NOTE_RICHIESTA,
  STATO IA_STATO_RICHIESTA,
  TIPO_RICHIESTA IA_TIPO_RICHIESTA,
  AUTORIZZ_AUTOMATICA IA_RICHIESTA_AUTOMATICA,
  ID_REVOCA IA_REVOCA,
  ID_REVOCATO IA_REVOCATO,
  T851LIVELLO IA_LIVELLO_AUTORIZZAZIONE,
  T851DATA IA_DATA_AUTORIZZAZIONE,
  T851NOME_RESPONSABILE IA_AUTORIZZATORE,
  T851NOTE IA_NOTE_AUTORIZZAZIONE,
  T851STATO IA_AUTORIZZAZIONE,
  T851AUTORIZZ_AUTOMATICA IA_AUTORIZZ_AUTOMATICA,
  lpad(' ',5,' ') IA_T050_CAUSALE,
  lpad(' ',40,' ') IA_T050_D_CAUSALE,
  lpad(' ',1,' ') IA_T050_TIPO,
  lpad(' ',5,' ') IA_T050_DAORE,
  lpad(' ',5,' ') IA_T050_AORE,
  to_date(null)   IA_T050_DATANASCITA,
  lpad(' ',1,' ') IA_T050_ELABORATO,
  lpad(' ',1,' ') IA_T050_TIPO_RICHIESTA,
  lpad(' ',1,' ') IA_T065_TIPO,
  to_number(null) IA_T065_IDCONGUAGLIO,
  to_number(null) IA_T065_ECCED_CALC,
  to_number(null) IA_T065_ECCED_RICH,
  to_number(null) IA_T065_COMP_RICH,
  to_number(null) IA_T065_LIQ_RICH,
  to_number(null) IA_T065_ECCED_AUT,
  to_number(null) IA_T065_COMP_AUT,
  to_number(null) IA_T065_LIQ_AUT,
  lpad(' ',1,' ') IA_T085_TIPOGIORNO_ORIG,
  lpad(' ',5,' ') IA_T085_ORARIO_ORIG,
  to_date(null)   IA_T085_GIORNO_RICH,
  lpad(' ',1,' ') IA_T085_TIPOGIORNO_RICH,
  lpad(' ',5,' ') IA_T085_ORARIO_RICH,
  lpad(' ',1,' ') IA_T105_OPERAZIONE,
  lpad(' ',5,' ') IA_T105_CAUS_ORIG,
  lpad(' ',5,' ') IA_T105_CAUSALE,
  lpad(' ',1,' ') IA_T105_VERSO_ORIG,
  lpad(' ',1,' ') IA_T105_VERSO,
  lpad(' ',5,' ') IA_T105_ORA,
  lpad(' ',1,' ') IA_T105_ELABORATO,
  lpad(' ',20,' ')  IA_T755_PROGETTO,
  lpad(' ',100,' ') IA_T755_D_PROGETTO,
  to_number(null)   IA_T755_ID_PROGETTO,
  lpad(' ',10,' ')  IA_T755_ATTIVITA,
  lpad(' ',100,' ') IA_T755_D_ATTIVITA,
  to_number(null)   IA_T755_ID_ATTIVITA,
  lpad(' ',10,' ')  IA_T755_TASK,
  lpad(' ',100,' ') IA_T755_D_TASK,
  to_number(null)   IA_T755_ID_TASK,
  to_number(null)   IA_T755_ORE_RENDICONTATE
from (
  select T_ITER.PROGRESSIVO,T_ITER.DAL,T_ITER.AL,VT850.*
  from VT850_T851 VT850, T050_RICHIESTEASSENZA T_ITER
  where VT850.ITER = 'T050'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,trunc(T_ITER.DATA,'mm') DAL,last_day(T_ITER.DATA) AL,VT850.*
  from VT850_T851 VT850, T065_RICHIESTESTRAORDINARI T_ITER
  where VT850.ITER = 'T065'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,trunc(T_ITER.DATA,'mm') DAL,last_day(T_ITER.DATA) AL,VT850.*
  from VT850_T851 VT850, T085_RICHIESTECAMBIORARI T_ITER
  where VT850.ITER = 'T085'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,T_ITER.DATA DAL,T_ITER.DATA AL,VT850.*
  from VT850_T851 VT850, T105_RICHIESTETIMBRATURE T_ITER
  where VT850.ITER = 'T105'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,T_ITER.DATA DAL,T_ITER.DATA AL,VT850.*
  from VT850_T851 VT850, T325_RICHIESTESTR_GG T_ITER, T326_RICHIESTESTR_SPEZ T326 
  where VT850.ITER = 'T325'
  and VT850.ID = T326.ID_T850
  and T326.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,T_ITER.DATA DAL,T_ITER.DATA AL,VT850.*
  from VT850_T851 VT850, T755_RICHIESTE_RENDICONTO T_ITER
  where VT850.ITER = 'T755'
  and VT850.ID = T_ITER.ID
  union
  select T_ITER.PROGRESSIVO,T_ITER.DATADA DAL,T_ITER.DATAA AL,VT850.*
  from VT850_T851 VT850, M140_RICHIESTE_MISSIONI T_ITER
  where VT850.ITER = 'M140'
  and VT850.ID = T_ITER.ID
);

create or replace view VM140_RICHIESTE_MISSIONI as
select
  M140.ROWID M140ROWID,
  M140.*,
  T850.DATA,
  T850.NOTE,
  T850.STATO,
  T850.TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA,
  T850.ID_REVOCA,
  T850.ID_REVOCATO,
  T850.ITER,
  T850.COD_ITER
from M140_RICHIESTE_MISSIONI M140, T850_ITER_RICHIESTE T850
where M140.ID = T850.ID; 

create view vt860_cartellini_pdf as
select   'AZIENDA' AZIENDA,
         'CODICE AZIENDA' COD_AZIENDA,
         'DESCRIZIONE AZIENDA' DESC_AZIENDA,
         T860.PROGRESSIVO,
         T030.MATRICOLA,
         T030.COGNOME,
         T030.NOME,
         T030.CODFISCALE,
         T030.DATANAS,
         T430.ENTE,
         I060.EMAIL,
         T860.MESE_CARTELLINO,
         nvl(T025.PAR_CARTELLINO,'STD') PARAM_CARTELLINO
  from   T860_ITER_STAMPACARTELLINI T860,
         T850_ITER_RICHIESTE T850,
         T030_ANAGRAFICO T030,
         T430_STORICO T430,
         T025_CONTMENSILI T025,
         MONDOEDP.I060_LOGIN_DIPENDENTE I060
  where  T860.ID = T850.ID
  and    T850.STATO = 'S'
  and    nvl(T860.ESISTE_PDF,'N') = 'N'
  and    T860.MESE_CARTELLINO between add_months(trunc(sysdate,'mm'),-999) and add_months(trunc(sysdate,'mm'),999)
  and    T860.PROGRESSIVO = T030.PROGRESSIVO
  and    T860.PROGRESSIVO = T430.PROGRESSIVO
  and    last_day(T860.MESE_CARTELLINO) between T430.DATADECORRENZA and T430.DATAFINE
  and    T430.PERSELASTICO = T025.CODICE
  and    I060.AZIENDA(+) = 'CSI_CLIENTI'
  and    I060.MATRICOLA(+) = T030.MATRICOLA
  /*--NOLOG--*/;

create or replace view VT050_RICHIESTEASSENZA as
select
  T050.ROWID T050ROWID,
  T050.ID,
  T050.PROGRESSIVO,
  T050.CAUSALE,
  T050.TIPOGIUST,
  T050.CSI_TIPO_MG,
  T050.DAL,
  T050.AL,
  T050.NUMEROORE,
  T050.AORE,
  T050.DATANAS,
  T050.NUMEROORE_PREV,
  T050.AORE_PREV,
  T050.ELABORATO,
  T850.DATA,
  T850.NOTE,
  T850.STATO,
  T850.TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA,
  T850.ID_REVOCA,
  T850.ID_REVOCATO,
  T850.ITER,
  T850.COD_ITER
from T050_RICHIESTEASSENZA T050, T850_ITER_RICHIESTE T850
where T050.ID = T850.ID;

create or replace view VT065_RICHIESTESTRAORDINARI as
select
  T065.ROWID T065ROWID,
  T065.ID,
  T065.PROGRESSIVO,
  T065.DATA,
  T065.MESE_RIFERIMENTO,
  T065.TIPO,
  T065.ID_CONGUAGLIO,
  T065.ORE_ECCED_CALC,
  T065.ORE_ECCEDENTI,
  T065.ORE_DACOMPENSARE,
  T065.ORE_DALIQUIDARE,
  T065.CAUSALE,
  T065.ORE_CAUSALIZZATE,
  T065.MIN_ORE_DALIQUIDARE,
  T065.MIN_ORE_DACOMPENSARE,
  T850.DATA DATA_RICHIESTA,
  T850.NOTE,
  T850.STATO,
  T850.TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA,
  T850.ID_REVOCA,
  T850.ID_REVOCATO,
  T850.ITER,
  T850.COD_ITER
from T065_RICHIESTESTRAORDINARI T065, T850_ITER_RICHIESTE T850
where T065.ID = T850.ID;
	
create or replace view VT105_RICHIESTETIMBRATURE as
select
  T105.ROWID T105ROWID,
  T105.ID,
  T105.PROGRESSIVO,
  T105.DATA, 
  T105.ORA, 
  T105.VERSO, 
  T105.CAUSALE, 
  T105.OPERAZIONE, 
  T105.ELABORATO, 
  T105.CAUSALE_ORIG, 
  T105.VERSO_ORIG, 
  T105.MOTIVAZIONE, 
  T105.RILEVATORE_RICH, 
  T105.RILEVATORE_ORIG,
  T850.DATA T850DATA,
  T850.NOTE,
  T850.STATO,
  T850.TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA,
  T850.ID_REVOCA,
  T850.ID_REVOCATO,
  T850.ITER,
  T850.COD_ITER
from T105_RICHIESTETIMBRATURE T105, T850_ITER_RICHIESTE T850
where T105.ID = T850.ID;
	
CREATE OR REPLACE VIEW VT246_ISCRIZIONISINDACATI AS
SELECT
  T246.PROGRESSIVO PROGRESSIVO11,
  T246.DATA_ISCR IS_DATA_ISCRIZIONE,
  T246.NUM_PROT_ISCR IS_PROT_ISCRIZIONE,
  T246.DATA_DEC_ISCR IS_DECORRENZA_ISCRIZIONE,
  T246.DATA_CESS IS_DATA_CESSAZIONE,
  NVL(T246.DATA_CESS,T430.FINE) IS_CESSAZIONE,
  T246.NUM_PROT_CESS IS_PROT_CESSAZIONE,
  T246.DATA_DEC_CES IS_DECORRENZA_CESSAZIONE,
  T246.COD_SINDACATO IS_SINDACATO,
  T240.DESCRIZIONE IS_D_SINDACATO,
  T240.COD_MINISTERIALE IS_COD_MINISTERIALE,
  T240.RAGGRUPPAMENTO IS_RAGGRUPPAMENTO,
  T240.SINDACATI_RAGGRUPPATI IS_SIND_RAGGRUPPATI,
  T240.RSU IS_RSU,
  T240.VOCEPAGHE IS_VOCEPAGHE,
  T240.CAUSALE_COMPETENZE IS_CAUSALE1,
  T240.CAUSALE_COMPETENZE_NO IS_CAUSALE2,
  T241.TIPO_RECAPITO IS_TIPO_RECAPITO,
  T241.DESCRIZIONE IS_REC_DESCRIZIONE,
  T241.INDIRIZZO IS_INDIRIZZO,
  T241.CAP IS_CAP,
  T241.COMUNE IS_COMUNE,
  T241.TELEFONO IS_TELEFONO,
  T241.FAX IS_FAX,
  T241.COGNOME IS_REC_COGNOME,
  T241.NOME IS_REC_NOME,
  T241.TELEFONO_CASA IS_REC_TEL_CASA,
  T241.TELEFONO_UFFICIO IS_REC_TEL_UFFICIO,
  T241.CELLULARE IS_REC_CELLULARE,
  T241.EMAIL IS_REC_EMAIL
FROM
  T246_ISCRIZIONISINDACATI T246,
  T430_STORICO T430,
  T240_ORGANIZZAZIONISINDACALI T240,
  T241_RECAPITISINDACATI T241
WHERE
  T430.PROGRESSIVO = T246.PROGRESSIVO AND
  NVL(T246.DATA_CESS,TO_DATE('31123999','DDMMYYYY')) BETWEEN T430.DATADECORRENZA AND T430.DATAFINE AND
  T240.CODICE = T246.COD_SINDACATO AND
  T240.DECORRENZA = (SELECT MAX(DECORRENZA) FROM T240_ORGANIZZAZIONISINDACALI WHERE CODICE = T240.CODICE AND DECORRENZA <= NVL(DATA_CESS,TO_DATE('31123999','DDMMYYYY'))) AND
  T241.CODICE = T246.COD_SINDACATO AND
  T241.DECORRENZA = (SELECT MAX(DECORRENZA) FROM T241_RECAPITISINDACATI WHERE CODICE = T241.CODICE AND DECORRENZA <= NVL(DATA_CESS,TO_DATE('31123999','DDMMYYYY')));


--Vista delle partecipazioni agli organismi sindacali:

CREATE OR REPLACE VIEW VT247_PARTECIPAZIONISINDACALI AS
SELECT
  T247.PROGRESSIVO PROGRESSIVO12,
  T247.DADATA OS_DATA_INIZIO,
  T247.ADATA OS_DATA_FINE,
  T247.COD_ORGANISMO OS_ORGANISMO,
  T245.DESCRIZIONE OS_D_ORGANISMO,
  T247.COD_SINDACATO OS_SINDACATO,
  T240.DESCRIZIONE OS_D_SINDACATO,
  T240.COD_MINISTERIALE OS_COD_MINISTERIALE,
  T240.RAGGRUPPAMENTO OS_RAGGRUPPAMENTO,
  T240.SINDACATI_RAGGRUPPATI OS_SIND_RAGGRUPPATI,
  T240.RSU OS_RSU,
  T240.VOCEPAGHE OS_VOCEPAGHE,
  T240.CAUSALE_COMPETENZE OS_CAUSALE1,
  T240.CAUSALE_COMPETENZE_NO OS_CAUSALE2,
  T241.TIPO_RECAPITO OS_TIPO_RECAPITO,
  T241.DESCRIZIONE OS_REC_DESCRIZIONE,
  T241.INDIRIZZO OS_INDIRIZZO,
  T241.CAP OS_CAP,
  T241.COMUNE OS_COMUNE,
  T241.TELEFONO OS_TELEFONO,
  T241.FAX OS_FAX,
  T241.COGNOME OS_REC_COGNOME,
  T241.NOME OS_REC_NOME,
  T241.TELEFONO_CASA OS_REC_TEL_CASA,
  T241.TELEFONO_UFFICIO OS_REC_TEL_UFFICIO,
  T241.CELLULARE OS_REC_CELLULARE,
  T241.EMAIL OS_REC_EMAIL,
  '          ' OS_COMPETENZE,
  '          ' OS_FRUITO,
  '          ' OS_RESIDUO  
FROM
  T247_PARTECIPAZIONISINDACATI T247,
  T240_ORGANIZZAZIONISINDACALI T240,
  T241_RECAPITISINDACATI T241,
  T245_ORGANISMISINDACALI T245
WHERE
  T240.CODICE = T247.COD_SINDACATO AND
  T240.DECORRENZA = (SELECT MAX(DECORRENZA) FROM T240_ORGANIZZAZIONISINDACALI WHERE CODICE = T240.CODICE AND DECORRENZA <= NVL(T247.ADATA,TO_DATE('31123999','DDMMYYYY'))) AND
  T241.CODICE = T247.COD_SINDACATO AND
  T241.DECORRENZA = (SELECT MAX(DECORRENZA) FROM T241_RECAPITISINDACATI WHERE CODICE = T241.CODICE AND DECORRENZA <= NVL(T247.ADATA,TO_DATE('31123999','DDMMYYYY'))) AND
  T245.CODICE = T247.COD_ORGANISMO;

--Vista dei permessi sindacali:

CREATE OR REPLACE VIEW VT248_PERMESSISINDACALI AS
SELECT
  T248.PROGRESSIVO PROGRESSIVO13,
  T248.DATA PS_DATA,
  T248.NUMERO_PROT PS_PROTOCOLLO,
  T248.DATA_PROT PS_DATA_PROTOCOLLO,
  T248.PROT_MODIFICA PS_PROTOCOLLO_MODIFICA,
  T248.DATA_MODIFICA PS_DATA_MODIFICA,
  OREMINUTI(T248.DALLE) PS_DALLE,
  OREMINUTI(T248.ALLE) PS_ALLE,
  OREMINUTI(T248.ORE) PS_ORE,
  T248.ABBATTE_COMPETENZE PS_ABBATTE_COMPETENZE,
  T248.STATO PS_STATO,
  T248.COD_ORGANISMO PS_ORGANISMO,
  T245.DESCRIZIONE PS_D_ORGANISMO,
  T248.COD_SINDACATO PS_SINDACATO,
  T240.DESCRIZIONE PS_D_SINDACATO,
  T240.COD_MINISTERIALE PS_COD_MINISTERIALE,
  T240.RAGGRUPPAMENTO PS_RAGGRUPPAMENTO,
  T240.SINDACATI_RAGGRUPPATI PS_SIND_RAGGRUPPATI,
  T240.RSU PS_RSU,
  T240.VOCEPAGHE PS_VOCEPAGHE,
  T240.CAUSALE_COMPETENZE PS_CAUSALE1,
  T240.CAUSALE_COMPETENZE_NO PS_CAUSALE2,
  T241.TIPO_RECAPITO PS_TIPO_RECAPITO,
  T241.DESCRIZIONE PS_REC_DESCRIZIONE,
  T241.INDIRIZZO PS_INDIRIZZO,
  T241.CAP PS_CAP,
  T241.COMUNE PS_COMUNE,
  T241.TELEFONO PS_TELEFONO,
  T241.FAX PS_FAX,
  T241.COGNOME PS_REC_COGNOME,
  T241.NOME PS_REC_NOME,
  T241.TELEFONO_CASA PS_REC_TEL_CASA,
  T241.TELEFONO_UFFICIO PS_REC_TEL_UFFICIO,
  T241.CELLULARE PS_REC_CELLULARE,
  T241.EMAIL PS_REC_EMAIL
FROM
  T248_PERMESSISINDACALI T248,
  T240_ORGANIZZAZIONISINDACALI T240,
  T241_RECAPITISINDACATI T241,
  T245_ORGANISMISINDACALI T245
WHERE
  T240.CODICE = T248.COD_SINDACATO AND
  T240.DECORRENZA = (SELECT MAX(DECORRENZA) FROM T240_ORGANIZZAZIONISINDACALI WHERE CODICE = T240.CODICE AND DECORRENZA <= T248.DATA) AND
  T241.CODICE = T248.COD_SINDACATO AND
  T241.DECORRENZA = (SELECT MAX(DECORRENZA) FROM T241_RECAPITISINDACATI WHERE CODICE = T241.CODICE AND DECORRENZA <= T248.DATA) AND
  T245.CODICE = T248.COD_ORGANISMO;

CREATE OR REPLACE VIEW VP450_DATIMENSILI AS
SELECT
P450.PROGRESSIVO PROGRESSIVO6,
P450.DATA_RETRIBUZIONE DM_DATA_RETRIBUZIONE,
P450.TIPO_RECORD DM_TIPO_RECORD,
P450.COD_CAMPO DM_COD_CAMPO,
P452.DESCRIZIONE DM_DESCRIZIONE,
P452.TIPO_DATO DM_TIPO_DATO,
P452.NUMERO_DECIMALI DM_NUMERO_DECIMALI,
P450.VALORE DM_VALORE,
P450.VARIAZIONE_TOTALE DM_VARIAZIONE_TOTALE
FROM
P450_DATIMENSILI P450,P452_DATIMENSILIDESC P452
WHERE
P450.COD_CAMPO = P452.COD_CAMPO;

CREATE OR REPLACE VIEW VP442_CEDOLINOVOCI AS
SELECT
P441.PROGRESSIVO PROGRESSIVO5,
P441.ID_CEDOLINO CV_ID_CEDOLINO,
P441.CHIUSO CV_CEDOLINO_CHIUSO,
P441.DATA_CEDOLINO CV_DATA_CEDOLINO,
TO_CHAR(P441.DATA_CEDOLINO,'YYYY') CV_DATA_CEDOLINO_ANNO,
P441.DATA_RETRIBUZIONE CV_DATA_RETRIBUZIONE,
P441.TIPO_CEDOLINO CV_TIPO_CEDOLINO,
P441.COD_VALUTA_STAMPA CV_VALUTA_NETTO,
P441.COD_VALUTA_BASE CV_VALUTA_CALCOLI,
P442.ROWID CV_ROWID,
P442.TIPO_RECORD CV_TIPO_RECORD,
P442.COD_CONTRATTO CV_COD_CONTRATTO,
P442.COD_VOCE CV_COD_VOCE,
P442.COD_VOCE_SPECIALE CV_COD_VOCE_SPECIALE,
P442.COD_VOCE || ' ' || P442.COD_VOCE_SPECIALE CV_COD_VOCE_COMPLETA,
P200.COD_VOCE_STAMPA CV_COD_VOCE_STAMPA,
RPAD(P200.COD_CONTRATTO,6,'_') || RPAD(P200.COD_VOCE,6,'_') || RPAD(P200.COD_VOCE_SPECIALE,5,'_') CV_COD_CONCATENATO,
P200.DESCRIZIONE CV_DESCRIZIONE,
DECODE(P442.DESCRIZIONE_VOCE_SOST,NULL,P200.DESCRIZIONE_STAMPA,P442.DESCRIZIONE_VOCE_SOST) CV_DESCRIZIONE_STAMPA,
TO_NUMBER(LTRIM(P442.QUANTITA),'9G999G999G999D99999','nls_numeric_characters='',.''') CV_QUANTITA,
TO_NUMBER(LTRIM(P442.DATOBASE),'9G999G999G999D99999','nls_numeric_characters='',.''') CV_DATOBASE,
P442.IMPORTO CV_IMPORTO,
P442.IMPORTO_INTERO CV_IMPORTO_INTERO,
DECODE(SIGN(P442.IMPORTO),-1,'-','+') CV_IMPORTO_SEGNO,
P442.DATA_COMPETENZA_DA CV_DATA_COMPETENZA_DA,
P442.DATA_COMPETENZA_A CV_DATA_COMPETENZA_A,
TO_CHAR(P442.DATA_COMPETENZA_A,'YYYY') CV_DATA_COMPETENZA_ANNO,
TO_CHAR(P442.DATA_COMPETENZA_A,'MM') CV_DATA_COMPETENZA_MESE,
P442.NOTE CV_NOTE,
P442.ECCEZIONI CV_ECCEZIONI,
P442.ORIGINE CV_ORIGINE,
P442.DATA_COMPETENZA_QUOTE CV_DATA_COMPETENZA_QUOTE,
P442.ID_VOCE CV_ID_VOCE,
P442.COD_VALUTA_INIZ CV_VALUTA_INIZ,
P442.IMPORTO_VALUTA_INIZ CV_IMPORTO_VALUTA_INIZ,
decode(least(trunc(P442.DATA_COMPETENZA_DA,'mm'),trunc(P441.DATA_CEDOLINO,'mm')),
       trunc(P442.DATA_COMPETENZA_DA,'mm'),P442.DATA_COMPETENZA_DA,trunc(P441.DATA_CEDOLINO,'mm')) CV_DATA_COMPSTORICO_DA,
decode(least(trunc(P442.DATA_COMPETENZA_A,'mm'),trunc(P441.DATA_CEDOLINO,'mm')),
       trunc(P442.DATA_COMPETENZA_A,'mm'),P442.DATA_COMPETENZA_A,P441.DATA_CEDOLINO) CV_DATA_COMPSTORICO_A,
P070.TIPO TIPO_ORE,
P150.TIPO_ORE TIPO_ORE_SETUP,
P200.CUMULO_ANNUALE_CEDOLONE CV_CUMULO_ANNUALE_CEDOLONE,
P200.RITENUTA_MASSIMALI_SCAGLIONI RITENUTA_MASSIMALI_SCAGLIONI,
P200.TIPO CV_TIPO,
P200.RETRIBUZIONE_CONTRATTUALE CV_RETRIBUZIONE_CONTRATTUALE,
P200.CASSA_COMPETENZA CV_CASSA_COMPETENZA,
P200.IMPORTO_AUTOMATICO CV_IMPORTO_AUTOMATICO,
P200.IMPORTO_AUTOMATICO_TIPO CV_IMPORTO_AUTOMATICO_TIPO,
P200.IMPORTO_COLONNA CV_IMPORTO_COLONNA,
P200.VOCE_QUANTITA CV_VOCE_QUANTITA,
P200.COD_MISURAQUANTITA CV_COD_MISURAQUANTITA,
P200.COD_RAGGRUPPAMENTO CV_COD_RAGGRUPPAMENTO,
P200.COD_CAUSALEIRPEF CV_COD_CAUSALEIRPEF,
P080.DESCRIZIONE CV_DESC_CAUSALEIRPEF,
P442.ID_VOCE_PROGRAMMATA CV_ID_VOCE_PROGRAMMATA,
P254.DATA_INIZIO VP_DATA_INIZIO,
P254.DATA_FINE VP_DATA_FINE,
P254.IMPORTO_TOTALE VP_IMPORTO_TOTALE,
P254.IMPORTO_RATA VP_IMPORTO_RATA,
P254.PERIODICITA_RATA VP_PERIODICITA_RATA,
P254.IMPORTO_PAGATO VP_IMPORTO_PAGATO,
DECODE(NVL(P254.ATTIVA,'N')||
       NVL(P254.SALDATA,'S')||
       NVL(P254.PERIODICITA_RATA,'0')||
       NVL(DECODE(P254.IMPORTO_TOTALE,0,'0','1'),'0')||
       NVL(DECODE(P254.IMPORTO_RATA,0,'0','1'),'0')||
       DECODE(P254.DATA_FINE,NULL,'1','0'),
  'SN1111',
    DECODE((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA,
         TRUNC((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA),
         ABS((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA),
         ABS(TRUNC((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA)) + 1) - DECODE(P441.CHIUSO,'S',0,1)
         + DECODE(ABS(P254.IMPORTO_TOTALE) - ABS(P254.IMPORTO_PAGATO) - ABS(P254.IMPORTO_INCREMENTO_RATA),0,-1,0)
         + DECODE(SIGN(ABS(P254.IMPORTO_TOTALE) - ABS(P254.IMPORTO_PAGATO) - DECODE('N','S',0,ABS(P254.IMPORTO_RATA)) - ABS(P254.IMPORTO_INCREMENTO_RATA)),1,0,-1)
    ,NULL)
  VP_RATE_RESIDUE_TEORICHE,
DECODE(NVL(P254.ATTIVA,'N')||
       NVL(P254.SALDATA,'S')||
       NVL(P254.PERIODICITA_RATA,'0')||
       NVL(DECODE(P254.IMPORTO_TOTALE,0,'0','1'),'0')||
       NVL(DECODE(P254.IMPORTO_RATA,0,'0','1'),'0')||
       DECODE(P254.DATA_FINE,NULL,'1','0'),
  'SN1111',
    ADD_MONTHS(P441.DATA_RETRIBUZIONE,
    DECODE((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA,
           TRUNC((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA),
           ABS((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA),
           ABS(TRUNC((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA)) + 1) - DECODE(P441.CHIUSO,'S',0,1)
           + DECODE(ABS(P254.IMPORTO_TOTALE) - ABS(P254.IMPORTO_PAGATO) - ABS(P254.IMPORTO_INCREMENTO_RATA),0,-1,0)
           + DECODE(SIGN(ABS(P254.IMPORTO_TOTALE) - ABS(P254.IMPORTO_PAGATO) - DECODE('N','S',0,ABS(P254.IMPORTO_RATA)) - ABS(P254.IMPORTO_INCREMENTO_RATA)),1,0,-1))
    ,NULL)
  VP_DATA_FINE_TEORICA,
P254.COD_GESTASSIC_AMM VP_COD_CASSA_INPDAP,
DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO) BE_COD_BENEFICIARIO,
(SELECT DESCRIZIONE FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_DESC_BENEFICIARIO,
(SELECT CODICE_FISCALE FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_CODFISCALE_BENEFICIARIO,
(SELECT PARTITA_IVA FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_PARTITAIVA_BENEFICIARIO,
(SELECT INDIRIZZO FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_INDIRIZZO_BENEFICIARIO,
(SELECT COMUNE FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_CODCOMUNE_BENEFICIARIO,
(SELECT CITTA FROM P012_BENEFICIARI P012, T480_COMUNI T480
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)
    AND P012.COMUNE = T480.CODICE) BE_DESCCOMUNE_BENEFICIARIO,
(SELECT PROVINCIA FROM P012_BENEFICIARI P012, T480_COMUNI T480
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)
    AND P012.COMUNE = T480.CODICE) BE_PROVINCIA_BENEFICIARIO,
(SELECT CAP FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_CAP_BENEFICIARIO,
(SELECT IBAN FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_IBAN_BENEFICIARIO
FROM
P441_CEDOLINO P441, P442_CEDOLINOVOCI P442, P254_VOCIPROGRAMMATE P254,
P200_VOCI P200,
P070_MISUREQUANTITA P070, P150_SETUP P150,
P080_CAUSALIIRPEF P080
WHERE
P441.ID_CEDOLINO = P442.ID_CEDOLINO AND
P442.ID_VOCE = P200.ID_VOCE AND
P442.ID_VOCE_PROGRAMMATA = P254.ID_VOCE_PROGRAMMATA(+) AND
P200.COD_MISURAQUANTITA = P070.COD_MISURAQUANTITA(+) AND
P200.COD_CAUSALEIRPEF = P080.COD_CAUSALEIRPEF(+) AND
P150.DECORRENZA = (SELECT MAX(DECORRENZA) FROM P150_SETUP WHERE DECORRENZA <= P441.DATA_CEDOLINO);

CREATE OR REPLACE VIEW VP441_CEDOLINO AS
SELECT
P441.PROGRESSIVO PROGRESSIVO4,
P441.DATA_CEDOLINO CD_DATA_CEDOLINO,
P441.DATA_RETRIBUZIONE CD_DATA_RETRIBUZIONE,
P441.TIPO_CEDOLINO CD_TIPO_CEDOLINO,
P441.DATA_EMISSIONE CD_DATA_EMISSIONE,
P441.CHIUSO CD_CHIUSO,
P441.PERC_IRPEF_MANUALE CD_PERC_IRPEF_MANUALE,
P441.PROGRESSIVO_MESE CD_PROGRESSIVO_MESE,
P441.COD_VALUTA_STAMPA CD_COD_VALUTA,
P030.DESCRIZIONE CD_DESC_VALUTA,
P441.COD_PAGAMENTO CD_COD_PAGAMENTO,
P130.DESCRIZIONE CD_DESC_PAGAMENTO
FROM
P441_CEDOLINO P441, P130_PAGAMENTI P130, P030_VALUTE P030
WHERE
P441.COD_PAGAMENTO = P130.COD_PAGAMENTO(+) AND
P441.COD_VALUTA_STAMPA = P030.COD_VALUTA AND
P030.DECORRENZA =
  (SELECT MAX(DECORRENZA) FROM P030_VALUTE WHERE COD_VALUTA = P030.COD_VALUTA AND DECORRENZA <= P441.DATA_CEDOLINO);

CREATE OR REPLACE VIEW VP440_CEDOLINOSTATO AS
SELECT
P440.PROGRESSIVO PROGRESSIVO2,
P440.ID_CEDOLINO_APERTO CS_ID_CEDOLINO_APERTO,
P441A.DATA_CEDOLINO CS_DATA_CEDOLINO_APERTO,
P441A.DATA_RETRIBUZIONE CS_DATA_RETRIBUZIONE_APERTO,
P441A.TIPO_CEDOLINO CS_TIPO_CEDOLINO_APERTO,
P440.CEDOLINO_CALCOLATO CS_CEDOLINO_CALCOLATO,
P440.ID_CEDOLINO_CHIUSO CS_ID_CEDOLINO_CHIUSO,
P440.DATA_CEDOLINO_CHIUSO CS_DATA_CEDOLINO_CHIUSO,
P441B.DATA_RETRIBUZIONE CS_DATA_RETRIBUZIONE_CHIUSO,
P441B.TIPO_CEDOLINO CS_TIPO_CEDOLINO_CHIUSO
FROM
P440_CEDOLINOSTATO P440, P441_CEDOLINO P441A, P441_CEDOLINO P441B
WHERE
P440.PROGRESSIVO = P441A.PROGRESSIVO AND
P440.ID_CEDOLINO_APERTO = P441A.ID_CEDOLINO AND
P440.PROGRESSIVO = P441B.PROGRESSIVO(+) AND
P440.ID_CEDOLINO_CHIUSO = P441B.ID_CEDOLINO(+);

CREATE OR REPLACE VIEW VP448_PARCHEGGIOVOCI AS
SELECT
P448.PROGRESSIVO PROGRESSIVO5,
0 CV_ID_CEDOLINO,
P447.CHIUSO CV_CEDOLINO_CHIUSO,
P447.COD_CEDOLINOPARK,
P447.DESCRIZIONE DESC_CEDOLINOPARK,
LAST_DAY(P447.DATA_RIFERIMENTO) CV_DATA_CEDOLINO,
LAST_DAY(P447.DATA_RIFERIMENTO) CV_DATA_RETRIBUZIONE,
NULL CV_TIPO_CEDOLINO,
' ' CV_VALUTA_NETTO,
' ' CV_VALUTA_CALCOLI,
P448.ROWID CV_ROWID,
P448.TIPO_RECORD CV_TIPO_RECORD,
P448.COD_CONTRATTO CV_COD_CONTRATTO,
P448.COD_VOCE CV_COD_VOCE,
P448.COD_VOCE_SPECIALE CV_COD_VOCE_SPECIALE,
P448.COD_VOCE || ' ' || P448.COD_VOCE_SPECIALE CV_COD_VOCE_COMPLETA,
P200.COD_VOCE_STAMPA CV_COD_VOCE_STAMPA,
RPAD(P200.COD_CONTRATTO,6,'_') || RPAD(P200.COD_VOCE,6,'_') || RPAD(P200.COD_VOCE_SPECIALE,5,'_') CV_COD_CONCATENATO,
P200.DESCRIZIONE_STAMPA CV_DESCRIZIONE,
P200.DESCRIZIONE_STAMPA CV_DESCRIZIONE_STAMPA,
TO_NUMBER(LTRIM(P448.QUANTITA),'9G999G999G999D99999','nls_numeric_characters='',.''') CV_QUANTITA,
TO_NUMBER(LTRIM(P448.DATOBASE),'9G999G999G999D99999','nls_numeric_characters='',.''') CV_DATOBASE,
P448.IMPORTO CV_IMPORTO,
P448.IMPORTO_INTERO CV_IMPORTO_INTERO,
DECODE(SIGN(P448.IMPORTO),-1,'-','+') CV_IMPORTO_SEGNO,
P448.DATA_COMPETENZA_DA CV_DATA_COMPETENZA_DA,
P448.DATA_COMPETENZA_A CV_DATA_COMPETENZA_A,
TO_CHAR(P448.DATA_COMPETENZA_A,'YYYY') CV_DATA_COMPETENZA_ANNO,
TO_CHAR(P448.DATA_COMPETENZA_A,'MM') CV_DATA_COMPETENZA_MESE,
' ' CV_NOTE,
P448.ECCEZIONI CV_ECCEZIONI,
P448.ORIGINE CV_ORIGINE,
P448.DATA_COMPETENZA_QUOTE CV_DATA_COMPETENZA_QUOTE,
P448.ID_VOCE CV_ID_VOCE,
' ' CV_VALUTA_INIZ,
0 CV_IMPORTO_VALUTA_INIZ,
P448.DATA_COMPETENZA_DA CV_DATA_COMPSTORICO_DA,
P448.DATA_COMPETENZA_A CV_DATA_COMPSTORICO_A,
P070.TIPO TIPO_ORE,
P150.TIPO_ORE TIPO_ORE_SETUP,
P200.CUMULO_ANNUALE_CEDOLONE CV_CUMULO_ANNUALE_CEDOLONE,
P200.RITENUTA_MASSIMALI_SCAGLIONI RITENUTA_MASSIMALI_SCAGLIONI,
P200.TIPO CV_TIPO,
P200.RETRIBUZIONE_CONTRATTUALE CV_RETRIBUZIONE_CONTRATTUALE,
P200.CASSA_COMPETENZA CV_CASSA_COMPETENZA,
P200.IMPORTO_AUTOMATICO CV_IMPORTO_AUTOMATICO,
P200.IMPORTO_AUTOMATICO_TIPO CV_IMPORTO_AUTOMATICO_TIPO,
P200.IMPORTO_COLONNA CV_IMPORTO_COLONNA,
P200.VOCE_QUANTITA CV_VOCE_QUANTITA,
P200.COD_MISURAQUANTITA CV_COD_MISURAQUANTITA,
P200.COD_RAGGRUPPAMENTO CV_COD_RAGGRUPPAMENTO,
P200.COD_CAUSALEIRPEF CV_COD_CAUSALEIRPEF,
P080.DESCRIZIONE CV_DESC_CAUSALEIRPEF,
P448.ID_VOCE_PROGRAMMATA CV_ID_VOCE_PROGRAMMATA,
P254.DATA_INIZIO VP_DATA_INIZIO,
P254.DATA_FINE VP_DATA_FINE,
P254.IMPORTO_TOTALE VP_IMPORTO_TOTALE,
P254.IMPORTO_RATA VP_IMPORTO_RATA,
P254.PERIODICITA_RATA VP_PERIODICITA_RATA,
P254.IMPORTO_PAGATO VP_IMPORTO_PAGATO,
DECODE(NVL(P254.ATTIVA,'N')||
       NVL(P254.SALDATA,'S')||
       NVL(P254.PERIODICITA_RATA,'0')||
       NVL(DECODE(P254.IMPORTO_TOTALE,0,'0','1'),'0')||
       NVL(DECODE(P254.IMPORTO_RATA,0,'0','1'),'0')||
       DECODE(P254.DATA_FINE,NULL,'1','0'),
  'SN1111',
    DECODE((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA,
         TRUNC((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA),
         ABS((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA),
         ABS(TRUNC((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA)) + 1) - DECODE(P447.CHIUSO,'S',0,1),
    NULL)
  VP_RATE_RESIDUE_TEORICHE,
DECODE(NVL(P254.ATTIVA,'N')||
       NVL(P254.SALDATA,'S')||
       NVL(P254.PERIODICITA_RATA,'0')||
       NVL(DECODE(P254.IMPORTO_TOTALE,0,'0','1'),'0')||
       NVL(DECODE(P254.IMPORTO_RATA,0,'0','1'),'0')||
       DECODE(P254.DATA_FINE,NULL,'1','0'),
  'SN1111',
    ADD_MONTHS(P447.DATA_RIFERIMENTO,
    DECODE((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA,
           TRUNC((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA),
           ABS((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA),
           ABS(TRUNC((P254.IMPORTO_TOTALE - P254.IMPORTO_PAGATO)/P254.IMPORTO_RATA)) + 1) - DECODE(P447.CHIUSO,'S',0,1)),
    NULL)
  VP_DATA_FINE_TEORICA,
P254.COD_GESTASSIC_AMM VP_COD_CASSA_INPDAP,
DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO) BE_COD_BENEFICIARIO,
(SELECT DESCRIZIONE FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_DESC_BENEFICIARIO,
(SELECT CODICE_FISCALE FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_CODFISCALE_BENEFICIARIO,
(SELECT PARTITA_IVA FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_PARTITAIVA_BENEFICIARIO,
(SELECT INDIRIZZO FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_INDIRIZZO_BENEFICIARIO,
(SELECT COMUNE FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_CODCOMUNE_BENEFICIARIO,
(SELECT CITTA FROM P012_BENEFICIARI P012, T480_COMUNI T480
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)
    AND P012.COMUNE = T480.CODICE) BE_DESCCOMUNE_BENEFICIARIO,
(SELECT PROVINCIA FROM P012_BENEFICIARI P012, T480_COMUNI T480
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)
    AND P012.COMUNE = T480.CODICE) BE_PROVINCIA_BENEFICIARIO,
(SELECT CAP FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_CAP_BENEFICIARIO,
(SELECT IBAN FROM P012_BENEFICIARI
  WHERE COD_BENEFICIARIO = DECODE(P254.COD_BENEFICIARIO,NULL,P200.COD_BENEFICIARIO,P254.COD_BENEFICIARIO)) BE_IBAN_BENEFICIARIO
FROM
P447_CEDOLINOPARK P447, P448_CEDOLINOPARKVOCI P448, P254_VOCIPROGRAMMATE P254,
P200_VOCI P200,
P070_MISUREQUANTITA P070, P150_SETUP P150,
P080_CAUSALIIRPEF P080
WHERE
P447.COD_CEDOLINOPARK = P448.COD_CEDOLINOPARK AND
P448.ID_VOCE = P200.ID_VOCE AND
P448.ID_VOCE_PROGRAMMATA = P254.ID_VOCE_PROGRAMMATA(+) AND
P200.COD_MISURAQUANTITA = P070.COD_MISURAQUANTITA(+) AND
P200.COD_CAUSALEIRPEF = P080.COD_CAUSALEIRPEF(+) AND
P150.DECORRENZA = (SELECT MAX(DECORRENZA) FROM P150_SETUP WHERE DECORRENZA <= P447.DATA_RIFERIMENTO);

CREATE OR REPLACE VIEW VP258_ADDIZIONALIIRPEF AS
SELECT
P258.PROGRESSIVO PROGRESSIVO7,
P258.ANNO AI_ANNO,
P258.TIPO_ADDIZIONALE AI_TIPO_ADDIZIONALE,
P258.COD_ENTE AI_COD_ENTE,
DECODE(TIPO_ADDIZIONALE,'C',T480.CITTA,'P',T481.DESCRIZIONE ,'R',T482.DESCRIZIONE) AI_NOME_ENTE,
P258.PERCENTUALE AI_PERCENTUALE,
P258.IMPORTO_TOTALE AI_IMPORTO_TOTALE,
P258.IMPORTO_PAGATO AI_IMPORTO_PAGATO,
P258.IMPORTO_RESTITUITO AI_IMPORTO_RESTITUITO,
P258.NUMERO_RATE AI_NUMERO_RATE,
P258.IMPORTO_TOTALE_CALCOLATO AI_IMPORTO_CALCOLATO
FROM P258_ADDIZIONALIIRPEF P258,T480_COMUNI T480,T481_PROVINCE T481,T482_REGIONI T482
WHERE
P258.COD_ENTE = T480.CODICE(+) AND
P258.COD_ENTE = T481.COD_PROVINCIA(+) AND
P258.COD_ENTE = T482.COD_REGIONE(+);

CREATE OR REPLACE VIEW VP262_MOD730 AS
SELECT
  P262.PROGRESSIVO PROGRESSIVO8,
  P262.ANNO ST_ANNO,
  P022.COD_CAAF ST_COD_CAAF,
  P022.NUM_ISC_ALBO ST_NUM_ISC_ALBO,
  P022.DESCRIZIONE ST_D_CAAF,
  P022.CODICE_FISCALE ST_CODFISCALE_CAAF,
  P260.COD_TIPOIMPORTO ST_COD_TIPOIMPORTO,
  P260.DESCRIZIONE ST_D_TIPOIMPORTO,
  P260.TIPO_IMPORTO ST_RIMBORSO_TRATTENUTA,
  P262.DATA_ARRIVO_MOD730 ST_DATA_RICEZ_MOD730,
  P262.DATA_ARRIVO_RETTIF ST_DATA_RICEZ_RETTIF,
  P262.DATA_ARRIVO_INTEGR ST_DATA_RICEZ_INTEGR,
  P262.COD_TIPOCONG ST_TIPO_CONGUAGLIO,
  P262.COD_RETTIF ST_CONGUAGLIO_RETTIF,
  P262.COD_ESITO_2RATA ST_ESITO_2RATA,
  P262.COD_ESITO_CONGNONEFF ST_ESITO_CONGUAGLIO_NONEFF,
  P262.INTEGRATIVO ST_INTEGRATIVO,
  P262.NON_LIQUID ST_NON_LIQUIDABILE,
  P264.COD_ENTE ST_COD_ENTE,
  DECODE(P260.TIPO_ENTE,'C',T480.CITTA,'P',T481.DESCRIZIONE ,'R',T482.DESCRIZIONE,NULL) ST_NOME_ENTE,
  P264.NUMERO_RATE ST_NUMERO_RATE,
  P264.IMPORTO_INIZIALE ST_IMPORTO_INIZIALE,
  P264.IMPORTO_RETTIFICA ST_IMPORTO_RETTIFICA,
  P264.IMPORTO_MANUALE ST_IMPORTO_MANUALE,
  P264.IMPORTO_DOVUTO ST_IMPORTO_DOVUTO,
  P264.IMPORTO_CONG_POS + P264.IMPORTO_CONG_NEG ST_IMPORTO_PAGATO,
  P264.IMPORTO_DOVUTO - P264.IMPORTO_CONG_POS - P264.IMPORTO_CONG_NEG ST_IMPORT_RESIDUO,
  P264.INTERESSI_RATEIZZ ST_INTERESSI_RATEIZZ,
  P264.INTERESSI_RITARDO ST_INTERESSI_RITARDO,
  P264.ATTRIBUZIONE_DIMESSI ST_ATTRIBUZIONE_DIMESSI,
  P264.MM_INIZIO_CONG ST_MM_INIZIO_CONG,
  P264.MM_INIZIO_RETTIF ST_MM_INIZIO_RETTIF
FROM
  P262_MOD730TESTATA P262, P264_MOD730IMPORTI P264, P260_MOD730TIPOIMPORTI P260, P022_CAAF P022,
  T480_COMUNI T480,T481_PROVINCE T481,T482_REGIONI T482
WHERE
  P262.PROGRESSIVO=P264.PROGRESSIVO AND
  P262.ANNO=P264.ANNO AND
  P260.COD_TIPOIMPORTO=P264.COD_TIPOIMPORTO AND
  P260.ANNO=P264.ANNO AND
  P262.COD_CAAF=P022.COD_CAAF AND
  P262.ANNO=P022.ANNO AND
  P264.COD_ENTE = T480.CODICE(+) AND
  P264.COD_ENTE = T481.COD_PROVINCIA(+) AND
  P264.COD_ENTE = T482.COD_REGIONE(+);

create or replace view vp220_livelli as
select p430.progressivo,p430.decorrenza,p430.cod_posizione_economica,pjoin.descrizione
from p430_anagrafico p430,p220_livelli pjoin where
p430.cod_posizione_economica = pjoin.cod_posizione_economica and
pjoin.decorrenza =
  (select max(decorrenza) from p220_livelli where
   cod_posizione_economica = p430.cod_posizione_economica and decorrenza <= p430.decorrenza);

create or replace view vp210_contratti as
select p430.progressivo,p430.decorrenza,p430.cod_contratto,pjoin.descrizione
from p430_anagrafico p430,p210_contratti pjoin where
p430.cod_contratto = pjoin.cod_contratto;

create or replace view vp030_valute as
select p430.progressivo,p430.decorrenza,p430.cod_valuta_stampa,pjoin.descrizione
from p430_anagrafico p430,p030_valute pjoin where
p430.cod_valuta_stampa = pjoin.cod_valuta and
pjoin.decorrenza =
  (select max(decorrenza) from p030_valute where
   cod_valuta = p430.cod_valuta_stampa and decorrenza <= p430.decorrenza);

create or replace view vp236_tabelleanf as
select p430.progressivo,p430.decorrenza,p430.cod_tabellaanf,pjoin.descrizione
from p430_anagrafico p430,p236_tabelleanf pjoin where
p430.cod_tabellaanf = pjoin.cod_tabellaanf and
pjoin.decorrenza =
  (select max(decorrenza) from p236_tabelleanf where
   cod_tabellaanf = p430.cod_tabellaanf and decorrenza <= p430.decorrenza);

create or replace view vp212_parametristipendi as
select p430.progressivo,p430.decorrenza,p430.cod_parametristipendi,pjoin.descrizione
from p430_anagrafico p430,p212_parametristipendi pjoin where
p430.cod_parametristipendi = pjoin.cod_parametristipendi and
pjoin.decorrenza =
  (select max(decorrenza) from p212_parametristipendi where
   cod_parametristipendi= p430.cod_parametristipendi and decorrenza <= p430.decorrenza);

create or replace view vp090_codiciinps as
select p430.progressivo,p430.decorrenza,p430.cod_codiceinps,pjoin.descrizione
from p430_anagrafico p430,p090_codiciinps pjoin where
p430.cod_codiceinps = pjoin.cod_codiceinps and
pjoin.decorrenza =
  (select max(decorrenza) from p090_codiciinps where
   cod_codiceinps = p430.cod_codiceinps and decorrenza <= p430.decorrenza);

create or replace view vp092_codiciinail as
select p430.progressivo,p430.decorrenza,p430.cod_codiceinail,pjoin.descrizione
from p430_anagrafico p430,p092_codiciinail pjoin where
p430.cod_codiceinail = pjoin.cod_codiceinail and
pjoin.decorrenza =
  (select max(decorrenza) from p092_codiciinail where
   cod_codiceinail = p430.cod_codiceinail and decorrenza <= p430.decorrenza);

create or replace view vp240_tipiassoggettamenti as
select p430.progressivo,p430.decorrenza,p430.cod_tipoassoggettamento,pjoin.descrizione
from p430_anagrafico p430,p240_tipiassoggettamenti pjoin where
p430.cod_tipoassoggettamento = pjoin.cod_tipoassoggettamento and
pjoin.decorrenza =
  (select max(decorrenza) from p240_tipiassoggettamenti where
   cod_tipoassoggettamento = p430.cod_tipoassoggettamento and decorrenza <= p430.decorrenza);

create or replace view vp094_inquadrinpdap as
select p430.progressivo,p430.decorrenza,p430.cod_inquadrinpdap,pjoin.descrizione
from p430_anagrafico p430,p094_inquadrinpdap pjoin where
p430.cod_inquadrinpdap = pjoin.cod_inquadrinpdap and
pjoin.decorrenza =
  (select max(decorrenza) from p094_inquadrinpdap where
   cod_inquadrinpdap = p430.cod_inquadrinpdap and decorrenza <= p430.decorrenza);

create or replace view vp096_inquadrinps as
select p430.progressivo,p430.decorrenza,p430.cod_inquadrinps,pjoin.descrizione
from p430_anagrafico p430,p096_inquadrinps pjoin where
p430.cod_inquadrinps = pjoin.cod_inquadrinps and
pjoin.decorrenza =
  (select max(decorrenza) from p096_inquadrinps where
   cod_inquadrinps = p430.cod_inquadrinps and decorrenza <= p430.decorrenza);

create or replace view vp082_deduzioniirpef as
select p430.progressivo,p430.decorrenza,p430.cod_deduzioneirpef,pjoin.descrizione
from p430_anagrafico p430,p082_deduzioniirpef pjoin where
p430.cod_deduzioneirpef = pjoin.cod_deduzioneirpef and
pjoin.decorrenza =
  (select max(decorrenza) from p082_deduzioniirpef where
   cod_deduzioneirpef = p430.cod_deduzioneirpef and decorrenza <= p430.decorrenza);

create or replace view vsg651_pianificazionecorsi as
select
  sg651.progressivo progressivo10,
  sg651.numero_giorno cf_numero_giorno,
  sg659.descrizione cf_d_numero_giorno,
  sg659.inizio1 cf_inizio_matt,
  sg659.fine1 cf_fine_matt,
  sg659.inizio2 cf_inizio_pom,
  sg659.fine2 cf_fine_pom,  
  sg651.data_corso cf_data_partecipazione,
  sg651.ora_inizio cf_ora_inizio,
  sg651.ora_fine cf_ora_fine,
  oreminuti(sg651.durata_corso) cf_durata_partecipazione,
  sg651.note cf_note_partecipazione,
  sg651.tipo_record cf_tipo_record, -- M=MANUALE, A=AUTOMATICO
  sg651.origine cf_origine_iscrizione, -- O=OPERATORE, W=WEB
  sg651.stato cf_stato_iscrizione, -- R=RICHIESTO, A=AUTORIZZATO, N=NON AUTORIZZATO, I=INSERITO, C=CANCELLATO
  sg651.data_iscrizione cf_data_iscrizione,
  sg651.operatore_iscrizione cf_operatore_iscrizione,
  sg651.data_autorizzazione cf_data_autorizzazione,
  sg651.operatore_autorizzazione cf_operatore_autorizzazione,
  sg651.data_validazione cf_data_validazione,
  sg651.operatore_validazione cf_operatore_validazione,
  'P' cf_tipo_partecipazione,
  0 cf_ore_docenza,
  0 cf_ore_docenza_int,
  0 cf_ore_docenza_est,
  0 cf_crediti_docenza,
  0 cf_tariffa_docenza,
  '' cf_note_docenza,
  '' cf_tipo_docenza,
  '' cf_attivo_docenza,
  sg650.codice cf_cod_corso,
  sg650.decorrenza cf_decorrenza,
  sg650.titolo_corso cf_titolo,
  sg650.edizione cf_edizione,
  sg650.notificato cf_notificato,
  sg650.definitivo cf_definitivo,
  sg650.data_inizio cf_inizio,
  sg650.data_fine cf_fine,
  sg650.durata_gg cf_durata_gg,
  sg650.durata_hh cf_durata_hh,
  sg650.numero_delibera cf_numero_delibera,
  sg650.data_delibera cf_data_delibera,
  sg650.profilo_crediti cf_profilo_crediti,
  sg657.descrizione cf_d_profilo_crediti,
  sg650.tipo_corso cf_tipo_corso,
  sg658.descrizione cf_d_tipo_corso,
  sg650.evento_progetto cf_evento,
  sg650.numero_crediti cf_crediti,
  sg650.gg_min cf_gg_min,
  sg650.hh_min cf_hh_min,
  sg650.max_partecipanti cf_max_partecipanti,
  sg650.max_iscritti cf_max_iscritti,
  sg650.flag_interno cf_flag_interno,
  sg650.luogo_corso cf_luogo_corso,
  sg652.descrizione cf_d_luogo_corso,
  sg650.metodo_corso cf_metodo,
  sg653.descrizione cf_d_metodo,
  replace(sg650.note,chr(10)) cf_note,
  sg650.ente_organizzatore cf_ente,
  sg665.descrizione cf_d_ente,
  sg667.codice cf_tipologia_ente,
  sg667.descrizione cf_d_tipologia_ente,
  sg650.tipo_aggiornamento cf_tipo_aggiornamento
from
  sg650_testatacorsi sg650,
  sg651_pianificazionecorsi sg651,
  sg652_luogocorsi sg652,
  sg653_metodocorsi sg653,
  sg657_codprofilicrediti sg657,
  sg658_codtipocorso sg658,
  sg659_giornatecorsi sg659,
  sg665_entecorsi sg665,
  sg667_raggrente sg667
where
  sg651.cod_corso = sg650.codice and
  sg651.edizione = sg650.edizione and
  sg659.cod_corso = sg650.codice and
  sg659.numero_giorno = sg651.numero_giorno and
  sg650.luogo_corso = sg652.codice(+) and
  sg650.metodo_corso = sg653.codice(+) and
  sg650.profilo_crediti = sg657.codice(+) and
  sg650.tipo_corso = sg658.codice(+) and
  sg650.ente_organizzatore = sg665.codice(+) and
  sg665.codice = sg667.codice(+)
union all
select
  sg664.progressivo progressivo10,
  0 cf_numero_giorno,
  '' cf_d_numero_giorno,
  '' cf_inizio_matt,
  '' cf_fine_matt,
  '' cf_inizio_pom,
  '' cf_fine_pom,  
  sg650.data_inizio cf_data_partecipazione,
  '' cf_ora_inizio,
  '' cf_ora_fine,
  0 cf_durata_partecipazione,
  '' cf_note_partecipazione,
  '' cf_tipo_record, -- M=MANUALE, A=AUTOMATICO
  '' cf_origine_iscrizione, -- O=OPERATORE, W=WEB
  '' cf_stato_iscrizione, -- R=RICHIESTO, A=AUTORIZZATO, N=NON AUTORIZZATO, I=INSERITO, C=CANCELLATO
  TO_DATE('01011900', 'ddmmyyyy') cf_data_iscrizione,
  '' cf_operatore_iscrizione,
  TO_DATE('01011900', 'ddmmyyyy') cf_data_autorizzazione,
  '' cf_operatore_autorizzazione,
  TO_DATE('01011900', 'ddmmyyyy') cf_data_validazione,
  '' cf_operatore_validazione,
  'D' cf_tipo_partecipazione,
  oreminuti(sg664.ore_docenza) cf_ore_docenza,
  oreminuti(sg664.ore_interne) cf_ore_docenza_int,
  oreminuti(sg664.ore_esterne) cf_ore_docenza_est,
  sg664.numero_crediti cf_crediti_docenza,
  sg664.tariffa cf_tariffa_docenza,
  sg664.note cf_note_docenza,
  sg664.tipo cf_tipo_docenza,
  sg664.attivo cf_attivo_docenza,
  sg650.codice cf_cod_corso,
  sg650.decorrenza cf_decorrenza,
  sg650.titolo_corso cf_titolo,
  sg650.edizione cf_edizione,
  sg650.notificato cf_notificato,
  sg650.definitivo cf_definitivo,
  sg650.data_inizio cf_inizio,
  sg650.data_fine cf_fine,
  sg650.durata_gg cf_durata_gg,
  sg650.durata_hh cf_durata_hh,
  sg650.numero_delibera cf_numero_delibera,
  sg650.data_delibera cf_data_delibera,
  sg650.profilo_crediti cf_profilo_crediti,
  sg657.descrizione cf_d_profilo_crediti,
  sg650.tipo_corso cf_tipo_corso,
  sg658.descrizione cf_d_tipo_corso,
  sg650.evento_progetto cf_evento,
  sg650.numero_crediti cf_crediti,
  sg650.gg_min cf_gg_min,
  sg650.hh_min cf_hh_min,
  sg650.max_partecipanti cf_max_partecipanti,
  sg650.max_iscritti cf_max_iscritti,
  sg650.flag_interno cf_flag_interno,
  sg650.luogo_corso cf_luogo_corso,
  sg652.descrizione cf_d_luogo_corso,
  sg650.metodo_corso cf_metodo,
  sg653.descrizione cf_d_metodo,
  replace(sg650.note,chr(10)) cf_note,
  sg650.ente_organizzatore cf_ente,
  sg665.descrizione cf_d_ente,
  sg667.codice cf_tipologia_ente,
  sg667.descrizione cf_d_tipologia_ente,
  sg650.tipo_aggiornamento cf_tipo_aggiornamento
from
  sg650_testatacorsi sg650,
  sg652_luogocorsi sg652,
  sg653_metodocorsi sg653,
  sg657_codprofilicrediti sg657,
  sg658_codtipocorso sg658,
  sg664_docenti sg664,
  sg665_entecorsi sg665,
  sg667_raggrente sg667
where
  sg650.luogo_corso = sg652.codice(+) and
  sg650.metodo_corso = sg653.codice(+) and
  sg650.profilo_crediti = sg657.codice(+) and
  sg650.tipo_corso = sg658.codice(+) and
  sg650.ente_organizzatore = sg665.codice(+) and
  sg665.codice = sg667.codice(+) and
  sg650.codice = sg664.cod_corso and
  sg650.edizione = sg664.edizione;

create or replace view vsg651_corsi as
select
  sg650.codice cf_cod_corso,
  sg650.decorrenza cf_decorrenza,
  sg650.titolo_corso cf_titolo,
  sg650.edizione cf_edizione,
  sg650.definitivo cf_definitivo,
  sg650.data_inizio cf_inizio,
  sg650.data_fine cf_fine,
  sg650.durata_gg cf_durata_gg,
  oreminuti(sg650.durata_hh) cf_durata_corso,
  sg650.numero_delibera cf_numero_delibera,
  sg650.data_delibera cf_data_delibera,
  sg650.profilo_crediti cf_profilo_crediti,
  sg657.descrizione cf_d_profilo_crediti,
  sg650.tipo_corso cf_tipo_corso,
  sg658.descrizione cf_d_tipo_corso,
  sg650.evento_progetto cf_evento,
  sg650.numero_crediti cf_crediti_corso,
  sg650.gg_min cf_gg_min,
  sg650.hh_min cf_gg_max,
  sg650.max_partecipanti cf_max_partecipanti,
  sg650.max_iscritti cf_max_iscritti,
  sg650.flag_interno cf_flag_interno,
  sg651.tipo_record cf_tipo_record, -- M=MANUALE, A=AUTOMATICO
  sg651.origine cf_origine_iscrizione, -- O=OPERATORE, W=WEB
  sg651.stato cf_stato_iscrizione, -- R=RICHIESTO, A=AUTORIZZATO, N=NON AUTORIZZATO, I=INSERITO, C=CANCELLATO
  sg650.luogo_corso cf_luogo_corso,
  sg650.codice_ministeriale cf_codice_ministeriale,  
  sg652.descrizione cf_d_luogo_corso,
  sg650.metodo_corso cf_metodo,
  sg653.descrizione cf_d_metodo,
  replace(sg650.note,chr(10)) cf_note,
  sg650.ente_organizzatore cf_ente,
  sg665.descrizione cf_d_ente,
  sg650.tipo_aggiornamento cf_tipo_aggiornamento,
  '' as cf_docente,
  sg651.progressivo as progressivo10,
  0 as cf_ore_docenza,
  0 cf_ore_docenza_int,
  0 cf_ore_docenza_est,
  0 as cf_crediti_partecipazione,
  'P' as cf_tipo_partecipazione,
  0 cf_tariffa_docenza,
  '' cf_note_docenza,
  '' cf_tipo_docenza,
  '' cf_attivo_docenza,
  numero_in_lettere(sg650.numero_crediti) cf_crediti_corso_let,
  'zero' cf_crediti_part_let
from
  sg650_testatacorsi sg650,
  sg651_pianificazionecorsi sg651,
  sg652_luogocorsi sg652,
  sg653_metodocorsi sg653,
  sg657_codprofilicrediti sg657,
  sg658_codtipocorso sg658,
  sg665_entecorsi sg665
where
  sg651.cod_corso = sg650.codice and
  sg651.edizione = sg650.edizione and
  sg650.luogo_corso = sg652.codice(+) and
  sg650.metodo_corso = sg653.codice(+) and
  sg650.profilo_crediti = sg657.codice(+) and
  sg650.tipo_corso = sg658.codice(+) and
  sg650.ente_organizzatore = sg665.codice(+)
union
select
  sg650.codice cf_cod_corso,
  sg650.decorrenza cf_decorrenza,
  sg650.titolo_corso cf_titolo,
  sg650.edizione cf_edizione,
  sg650.definitivo cf_definitivo,
  sg650.data_inizio cf_inizio,
  sg650.data_fine cf_fine,
  sg650.durata_gg cf_durata_gg,
  oreminuti(sg650.durata_hh) cf_durata_corso,
  sg650.numero_delibera cf_numero_delibera,
  sg650.data_delibera cf_data_delibera,
  sg650.profilo_crediti cf_profilo_crediti,
  sg657.descrizione cf_d_profilo_crediti,
  sg650.tipo_corso cf_tipo_corso,
  sg658.descrizione cf_d_tipo_corso,
  sg650.evento_progetto cf_evento,
  sg650.numero_crediti cf_crediti_corso,
  sg650.gg_min cf_gg_min,
  sg650.hh_min cf_gg_max,
  sg650.max_partecipanti cf_max_partecipanti,
  sg650.max_iscritti cf_max_iscritti,
  sg650.flag_interno cf_flag_interno,
  'M' cf_tipo_record, -- M=MANUALE, A=AUTOMATICO
  'O' cf_origine_iscrizione, -- O=OPERATORE, W=WEB
  'I' cf_stato_iscrizione, -- R=RICHIESTO, A=AUTORIZZATO, N=NON AUTORIZZATO, I=INSERITO, C=CANCELLATO
  sg650.luogo_corso cf_luogo_corso,
  sg650.codice_ministeriale cf_codice_ministeriale,
  sg652.descrizione cf_d_luogo_corso,
  sg650.metodo_corso cf_metodo,
  sg653.descrizione cf_d_metodo,
  replace(sg650.note,chr(10)) cf_note,
  sg650.ente_organizzatore cf_ente,
  sg665.descrizione cf_d_ente,
  sg650.tipo_aggiornamento cf_tipo_aggiornamento,
  '' cf_docente,
  sg664.progressivo as progressivo10,
  oreminuti(sg664.ore_docenza) as cf_ore_docenza,
  oreminuti(sg664.ore_interne) as cf_ore_docenza_int,
  oreminuti(sg664.ore_esterne) as cf_ore_docenza_est,
  sg664.numero_crediti as cf_crediti_partecipazione,
  'D' as cf_tipo_partecipazione,
  sg664.tariffa cf_tariffa_docenza,
  sg664.note cf_note_docenza,
  sg664.tipo cf_tipo_docenza,
  sg664.attivo cf_attivo_docenza,
  numero_in_lettere(sg650.numero_crediti) cf_crediti_let,
  numero_in_lettere(sg664.numero_crediti) cf_crediti_part_let
from
  sg650_testatacorsi sg650,
  sg664_docenti sg664,
  sg652_luogocorsi sg652,
  sg653_metodocorsi sg653,
  sg657_codprofilicrediti sg657,
  sg658_codtipocorso sg658,
  sg665_entecorsi sg665
where
  sg664.cod_corso = sg650.codice and
  sg664.edizione = sg650.edizione and
  sg650.luogo_corso = sg652.codice(+) and
  sg650.metodo_corso = sg653.codice(+) and
  sg650.profilo_crediti = sg657.codice(+) and
  sg650.tipo_corso = sg658.codice(+) and
  sg650.ente_organizzatore = sg665.codice(+);

CREATE OR REPLACE VIEW VSG651_PARTECIPAZIONECORSI AS
SELECT PROGRESSIVO,CODICE COD_CORSO,TITOLO_CORSO,EDIZIONE,TIPO_CORSO,DATA_INIZIO DECORRENZA,DATA_FINE,ORE,TIPOPARTECIPAZIONE,CREDITI,SPONSOR,FLAG_INTERNO,PROFILO_CREDITI FROM
  (
  SELECT SG651.PROGRESSIVO,SG650.CODICE,SG650.TITOLO_CORSO,SG650.EDIZIONE,SG650.TIPO_CORSO,SG650.DATA_INIZIO,SG650.DATA_FINE,SUM(OREMINUTI(NVL(SG651.DURATA_CORSO,0)))/60 ORE,
         'P' TIPOPARTECIPAZIONE, SUM(NVL(SG670.CREDITI,0)) CREDITI, MAX(TRIM(SG651.SPONSOR)) SPONSOR, SG650.FLAG_INTERNO, SG650.PROFILO_CREDITI
  FROM SG651_PIANIFICAZIONECORSI SG651, SG650_TESTATACORSI SG650, SG670_CREDITIINDIVIDUALI SG670
  WHERE SG651.COD_CORSO = SG650.CODICE AND SG651.EDIZIONE = SG650.EDIZIONE AND SG651.COD_CORSO = SG670.COD_CORSO(+) AND SG651.PROGRESSIVO = SG670.PROGRESSIVO(+)
  GROUP BY SG651.PROGRESSIVO,SG650.CODICE,SG650.EDIZIONE,SG650.TITOLO_CORSO,SG650.TIPO_CORSO,SG650.DATA_INIZIO,SG650.DATA_FINE, SG650.FLAG_INTERNO, SG650.PROFILO_CREDITI
  UNION
  SELECT SG664.PROGRESSIVO,SG650.CODICE,SG650.TITOLO_CORSO,SG650.EDIZIONE,SG650.TIPO_CORSO,SG650.DATA_INIZIO,SG650.DATA_FINE,SUM(OREMINUTI(NVL(SG664.ORE_DOCENZA,0)))/60 ORE,
         SG664.TIPO TIPOPARTECIPAZIONE, SUM(SG664.NUMERO_CREDITI) CREDITI, '' SPONSOR, SG650.FLAG_INTERNO, SG650.PROFILO_CREDITI
  FROM SG664_DOCENTI SG664, SG650_TESTATACORSI SG650
  WHERE SG664.ATTIVO = 'S'
    AND SG664.COD_CORSO = SG650.CODICE AND SG664.EDIZIONE = SG650.EDIZIONE
  GROUP BY SG664.PROGRESSIVO,SG650.CODICE,SG650.TITOLO_CORSO,SG650.EDIZIONE,SG650.TIPO_CORSO,SG664.TIPO,SG650.DATA_INIZIO,SG650.DATA_FINE, SG650.FLAG_INTERNO, SG650.PROFILO_CREDITI
  ) ORDER BY TIPOPARTECIPAZIONE;

CREATE OR REPLACE VIEW VT433_CDC_PERCENT AS
SELECT T433.PROGRESSIVO, DECORRENZA, DECORRENZA_FINE, T433.CODICE, T433.PERCENTUALE
  FROM T433_CDC_PERCENT T433
UNION
SELECT T430.PROGRESSIVO, GREATEST(T430.DATADECORRENZA,T433A.DECORRENZA_FINE + 1) DECORRENZA, LEAST(T430.DATAFINE,T433B.DECORRENZA - 1) SCADENZA, T430.CENTRO_COSTO, 100
  FROM T430_STORICO T430, T433_CDC_PERCENT T433A,  T433_CDC_PERCENT T433B
  WHERE T430.PROGRESSIVO = T433A.PROGRESSIVO
  AND T430.DATADECORRENZA <= T433B.DECORRENZA - 1 AND T430.DATAFINE >=  T433A.DECORRENZA_FINE + 1
  AND T433A.PROGRESSIVO = T433B.PROGRESSIVO AND T433B.DECORRENZA = (SELECT  MIN(DECORRENZA) FROM T433_CDC_PERCENT T433C
  WHERE T433C.PROGRESSIVO = T433B.PROGRESSIVO AND T433C.DECORRENZA > T433A.DECORRENZA)
UNION
SELECT T430.PROGRESSIVO, T430.DATADECORRENZA,LEAST(T430.DATAFINE,(SELECT  NVL(MIN(DECORRENZA - 1),T430.DATAFINE) FROM T433_CDC_PERCENT T433C WHERE T433C.PROGRESSIVO = T430.PROGRESSIVO)),T430.CENTRO_COSTO, 100
  FROM T430_STORICO T430
  WHERE DATADECORRENZA < (SELECT  NVL(MIN(DECORRENZA),T430.DATAFINE) FROM T433_CDC_PERCENT T433C WHERE T433C.PROGRESSIVO = T430.PROGRESSIVO)
UNION
SELECT T430.PROGRESSIVO, GREATEST(T430.DATADECORRENZA,(SELECT  NVL(MAX(DECORRENZA_FINE + 1),T430.DATADECORRENZA) FROM T433_CDC_PERCENT T433C WHERE T433C.PROGRESSIVO = T430.PROGRESSIVO)),T430.DATAFINE,T430.CENTRO_COSTO, 100
  FROM T430_STORICO T430
  WHERE DATAFINE > (SELECT  NVL(MAX(DECORRENZA_FINE),T430.DATADECORRENZA) FROM T433_CDC_PERCENT T433C WHERE T433C.PROGRESSIVO = T430.PROGRESSIVO)/*--NOLOG--*/;

create or replace view vsg402_rischiprescrizioni as
select
  sg402.progressivo PROGRESSIVO17,
  sg402.tipo_rischio RP_TIPO_RISCHIO,
  sg400.descrizione RP_D_TIPO_RISCHIO,
  sg402.data_inizio RP_DATA_INIZIO,
  sg402.data_fine RP_DATA_FINE,
  sg402.tipo_cessaz RP_TIPO_CESSAZIONE,
  sg401.descrizione RP_D_TIPO_CESSAZIONE,
  sg402.tipo_attivita RP_TIPO_ATTIVITA,
  sg405.descrizione RP_D_TIPO_ATTIVITA,
  sg402.tipo_esposizione RP_TIPO_ESPOSIZIONE,
  sg406.descrizione RP_D_TIPO_ESPOSIZIONE,
  sg402.note RP_NOTE_RISCHIO,
  sg403.data_visita RP_DATA_VISITA,
  sg403.esito_visita RP_ESITO_VISITA,
  DECODE(sg403.esito_visita,'ID','IDONEO','NI','NON IDONEO','IP','IDONEO CON PRESCRIZIONI','IM','IDONEO ALLA MANSIONE PREVISTA','IA','IDONEO ALLA MANSIONE ATTUALE','IL','IDONEO CON LIMITAZIONI','NT','NON IDONEO TEMPORANEAMENTE','NP','NON IDONEO PERMANENTEMENTE','IN','INADEMPIENTE','') RP_D_ESITO_VISITA,
  sg400.periodicita RP_PERIODICITA_VISITA,
  sg403.data_prox_visita RP_DATA_PROX_VISITA,
  sg403.note RP_NOTE_VISITA,
  nvl(sg403.data_visita,sg402.data_inizio) RP_DATA_PERIODO,
  sg403.oggetto RP_OGGETTO_VISITA,
  sg403.prescrizione RP_PRESCRIZIONE_VISITA,
  sg404.descrizione RP_D_PRESCRIZIONE_VISITA,
  sg403.data_esito RP_DATA_ESITO
from
  sg402_testatarischi sg402,
  sg403_dettagliorischi sg403,
  sg400_tiporischi sg400,
  sg401_tipocessazrischi sg401,
  sg404_tipoprescrizioni sg404,
  sg405_tipoattivita sg405,
  sg406_tipoesposizione sg406
where
  sg402.progressivo = sg403.progressivo(+) and
  sg402.tipo_rischio = sg403.tipo_rischio(+) and
  sg402.data_inizio = sg403.data_inizio(+) and
  sg402.tipo_rischio = sg400.codice(+) and
  sg402.tipo_cessaz = sg401.codice(+) and
  sg402.tipo_attivita = sg405.codice(+) and
  sg402.tipo_esposizione = sg406.codice(+) and
  sg403.prescrizione = sg404.codice (+);

create or replace view vsg303_incarichi as
select
  sg303.progressivo PROGRESSIVO18,
  sg303.cod_unitaorg IN_COD_UNITAORG,
  lpad(' ',100,' ') IN_D_UNITAORG,
  sg303.cod_tipoinc IN_TIPOINC,
  sg301.descrizione IN_D_TIPOINC,
  sg301.cod_categ IN_CATEGORIA,
  sg301.direttore IN_DIRETTORE_TIPOINC,
  nvl(sg302.valore_econ,sg301.valore_econ) IN_VALOREMENS_TIPOINC,
  sg301.valore_econ_variaz IN_VALORETEOR_TIPOINC,
  sg303.titolo_posizione IN_TITOLO_POSIZIONE,
  sg303.tipo_posizione IN_TIPOLOGIA_POSIZIONE,
  sg303.data_affidamento IN_DATA_AFFIDAMENTO,
  nvl(sg303.data_scadenza,to_date('31123999','ddmmyyyy')) IN_DATA_SCADENZA,
  sg303.data_sottoscrizione IN_DATA_SOTTOSCRIZIONE,
  DECODE(sg303.tipo_assegnazione,'A','Prima assegnazione','C','Conferma') IN_TIPO_ASSEGNAZIONE,
  sg303.mansioni_competenze IN_MANSIONI_COMPETENZE,
  sg303.motivazioni IN_MOTIVAZIONI,
  sg303.obiettivi_generali IN_OBIETTIVI_GENERALI,
  sg303.risorse IN_RISORSE,
  sg303.osservazioni_dirigente IN_OSSERVAZIONI_DIRIGENTE,
  sg303.tipoatto IN_TIPOATTO,
  sg303.numatto IN_NUMATTO,
  sg303.dataatto IN_DATAATTO,
  sg303.autorita IN_AUTORITA,
  sg303.dataesec IN_DATAESEC,
  sg303.cod_commissione IN_COMMISSIONE,
  sg305.descrizione IN_D_COMMISSIONE,
  sg303.data_valutazione IN_DATA_VALUTAZIONE,
  sg303.esito_valutazione IN_ESITO_VALUTAZIONE,
  sg303.giudizio_valutazione IN_GIUDIZIO_VALUTAZIONE,
  sg303.proposta_valutazione IN_PROPOSTA_VALUTAZIONE,
  sg303.articolo_revoca IN_ARTICOLO_REVOCA,
  sg303.annotazioni IN_ANNOTAZIONI,
  sg303.data_verifica IN_DATA_VERIFICA,
  sg303.cod_tipoverif IN_COD_TIPO_VERIFICA,
  sg309.descrizione IN_DESC_TIPO_VERIFICA,
  sg303.esito_verifica IN_ESITO_VERIFICA,
  sg303.note_verifica IN_NOTE_VERIFICA,
  sg303.tipoatto_verif IN_TIPOATTO_VERIFICA,
  sg303.numatto_verif IN_NUMATTO_VERIFICA,
  sg303.dataatto_verif IN_DATAATTO_VERIFICA,
  sg303.autorita_verif IN_AUTORITA_VERIFICA,
  sg303.dataesec_verif IN_DATAESEC_VERIFICA,
  sg300.descrizione IN_D_CATEGORIA,
  sg300.area IN_CATEG_AREA,
  sg300.riferimenti_contr IN_CATEG_RIFCONTR,
  sg302.incsup_tipoinc IN_INCSUP_TIPOINC,
  sg302.incsup_titolo IN_INCSUP_TITOLO
from
  sg303_incindividuali sg303,
  sg301_inctipo sg301,
  sg305_inccommissioni sg305,
  sg309_inctipoverif sg309,
  sg300_inccateg sg300,
  sg302_incaziendali sg302
where
  sg303.cod_tipoinc = sg301.cod_tipoinc(+) and
  sg303.data_affidamento between sg301.decorrenza (+) and sg301.decorrenza_fine (+) and
  sg303.cod_commissione = sg305.cod_commissione(+) and
  sg303.cod_tipoverif = sg309.codice(+) and
  sg301.cod_categ = sg300.cod_categ and
  sg303.data_affidamento between sg300.decorrenza (+) and sg300.decorrenza_fine (+) and
  sg303.cod_unitaorg = sg302.cod_unitaorg and
  sg303.cod_tipoinc = sg302.cod_tipoinc and
  sg303.titolo_posizione = sg302.titolo_posizione and
  sg303.data_affidamento between sg302.decorrenza and sg302.decorrenza_fine;

create or replace view vsg308_incverifiche as
select
  sg308.progressivo PROGRESSIVO23,
  sg308.data_verifica IV_DATA_VERIFICA,
  sg308.cod_tipoverif IV_COD_TIPO_VERIFICA,
  sg309.descrizione IV_DESC_TIPO_VERIFICA,
  sg308.decorrenza_ind IV_DECORRENZA_IND,
  sg308.scadenza_ind IV_SCADENZA_IND,
  sg308.note IV_NOTE,
  sg308.tipoatto IV_TIPOATTO,
  sg308.numatto IV_NUMATTO,
  sg308.dataatto IV_DATAATTO,
  sg308.autorita IV_AUTORITA,
  sg308.dataesec IV_DATAESEC
from
  sg308_incindennita sg308,
  sg309_inctipoverif sg309
where
  sg308.cod_tipoverif = sg309.codice(+);

create or replace view VT280_MESSAGGIWEB as
select
PROGRESSIVO PROGRESSIVO19,
DATA MW_DATA,
MITTENTE MW_MITTENTE,
TESTO MW_TESTO,
TITOLO MW_TITOLO,
FLAG MW_FLAG,
LOG MW_LOG
from T280_MESSAGGIWEB;

create or replace view VT050_T105_RICHIESTEWEB as
select
'GIUSTIFICATIVI' RW_RICHIESTA,
T050.PROGRESSIVO PROGRESSIVO20,
T050.DAL RW_DATA1,
T050.AL RW_DATA2,
T050.CAUSALE RW_CAUSALE,
NVL(T265.DESCRIZIONE,T275.DESCRIZIONE) RW_D_CAUSALE,
T050.TIPOGIUST RW_TIPO,
T050.CSI_TIPO_MG RW_TIPO_MG,
T050.NUMEROORE RW_ORE1,
T050.AORE RW_ORE2,
T050.DATANAS RW_DATANASCITA,
'I' RW_OPERAZIONE,
T050.NOTE /*T050.NOTE1*/ RW_NOTE1,
null /*T050.NOTE2*/ RW_NOTE2,
T050.STATO /*T050.AUTORIZZAZIONE*/ RW_AUTORIZZAZIONE,
' ' /*T050.RESPONSABILE*/ RW_RESPONSABILE,
T050.ELABORATO RW_ELABORATO,
T050.DATA /*T050.DATA_RICHIESTA*/ RW_DATA_RICHIESTA,
to_date(null) /*T050.DATA_AUTORIZZAZIONE*/ RW_DATA_AUTORIZZAZIONE,
null RW_VERSO_ORIG,
null RW_CAUSALE_ORIG,
null RW_CAUSALE_RICH,
T050.TIPO_RICHIESTA RW_TIPO_RICHIESTA,
null /*T050.AUTORIZZ_PREV*/ RW_AUTORIZZ_PREV,
to_date(null) /*T050.DATA_AUTORIZZ_PREV*/ RW_DATA_AUTORIZZ_PREV,
T050.ID RW_ID_RICHIESTA,
T050.ID_REVOCA RW_ID_REVOCA,
null /*T050.NUMEROORE_PREV*/ RW_ORE1_PREV,
null /*T050.AORE_PREV*/ RW_ORE2_PREV
from VT050_RICHIESTEASSENZA T050, T265_CAUASSENZE T265, T275_CAUPRESENZE T275
where T050.CAUSALE = T265.CODICE (+)
and T050.CAUSALE = T275.CODICE (+)
union all
select
'TIMBRATURE',
T105.PROGRESSIVO,
T105.DATA,
T105.DATA,
T105.CAUSALE,
T275.DESCRIZIONE,
T105.VERSO,
null,
T105.ORA,
T105.ORA,
to_date(null),
T105.OPERAZIONE,
T850.NOTE /*T105.NOTE1*/,
null /*T105.NOTE2*/,
T850.STATO /*T105.AUTORIZZAZIONE*/,
null /*T105.RESPONSABILE*/,
T105.ELABORATO,
T850.DATA /*T105.DATA_RICHIESTA*/,
to_date(null) /*T105.DATA_AUTORIZZAZIONE*/,
T105.VERSO_ORIG,
T105.CAUSALE_ORIG,
T105.CAUSALE_RICH,
null,
null,
to_date(null),
to_number(null),
to_number(null),
null,
null
from T105_RICHIESTETIMBRATURE T105, T275_CAUPRESENZE T275, T850_ITER_RICHIESTE T850      
where T105.CAUSALE = T275.CODICE(+)
and T105.ID = T850.ID
and T850.iter = 'T105';

create or replace view VT500_CARTASERVIZI as
select
  T502.CAMPO1 CS_CAMPO1,
  LPAD(' ',100,' ') CS_D_CAMPO1,
  T502.CAMPO2 CS_CAMPO2,
  LPAD(' ',100,' ') CS_D_CAMPO2,
  T502.PROGRESSIVO PROGRESSIVO21,
  T500.DATA CS_DATA,
  T500.COMANDATO CS_COMANDATO,
  T500.TIPO_TURNO CS_TIPO_TURNO,
  T545.DESCRIZIONE CS_D_TIPO_TURNO,
  T500.PATTUGLIA CS_PATTUGLIA,
  T500.SERVIZIO CS_SERVIZIO,
  T540.DESCRIZIONE CS_D_SERVIZIO,
  T500.DALLE CS_DALLE,
  T500.ALLE CS_ALLE,
  T500.CAUSALE CS_CAUSALE,
  T275.DESCRIZIONE CS_D_CAUSALE,
  T500.NOTE CS_NOTE,
  T500.NOTE_SERVIZIO CS_MESSAGGI,
  T500.STATO CS_STATO,
  T500.ORDINE CS_ORDINE,
  T501F_ELENCO_APPARATI(T500.DATA,T500.PATTUGLIA) CS_DOTAZIONE
from
  T500_PIANIFSERVIZI T500, T545_TIPITURNO T545, T540_SERVIZI T540, T275_CAUPRESENZE T275,
  T502_PATTUGLIE T502
where
  T500.TIPO_TURNO = T545.CODICE and
  T500.SERVIZIO = T540.CODICE and
  T500.CAUSALE = T275.CODICE(+) and
  T500.DATA = T502.DATA and
  T500.PATTUGLIA = T502.PATTUGLIA;

create or replace view vt100_timb_dataora as
select progressivo,data,ora,verso,causale,rilevatore,flag,to_date(to_char(data,'ddmmyyyy')||to_char(ora,'hh24mi'),'ddmmyyyyhh24mi') dataora,id_richiesta
from t100_timbrature where flag in ('O','I');

create or replace view VT100_COPPIE_EU as
select 
  VT100E.PROGRESSIVO,
  VT100E.VERSO E,VT100E.DATAORA DATAORA_E,VT100E.DATA DATA_E,to_char(VT100E.ORA,'hh24.mi') ORA_E,VT100E.RILEVATORE RILEV_E,VT100E.CAUSALE CAUS_E,VT100E.ID_RICHIESTA ID_RICH_E,
  VT100U.VERSO U,VT100U.DATAORA DATAORA_U,VT100U.DATA DATA_U,to_char(VT100U.ORA,'hh24.mi') ORA_U,VT100U.RILEVATORE RILEV_U,VT100U.CAUSALE CAUS_U,VT100U.ID_RICHIESTA ID_RICH_U
from 
  VT100_TIMB_DATAORA VT100E, VT100_TIMB_DATAORA VT100U
where VT100E.VERSO = 'E'
and   VT100U.VERSO = 'U'
and   VT100U.PROGRESSIVO = VT100E.PROGRESSIVO
and   VT100U.DATA between VT100E.DATA and VT100E.DATA + 1
and   VT100U.DATAORA = (select min(DATAORA) from VT100_TIMB_DATAORA 
	                    where PROGRESSIVO = VT100E.PROGRESSIVO 
	                    and   VERSO = 'U' 
	                    and   DATA between VT100E.DATA and VT100E.DATA + 1 
	                    and   DATAORA >= VT100E.DATAORA);

create or replace view VT380_REP_DATAORA as
select t380.progressivo,t380.data,
       to_date(to_char(t380.data,'ddmmyyyy')||to_char(t350.orainizio,'hh24mi'),'ddmmyyyyhh24mi') orainizio,
       to_date(to_char(decode(sign(orafine - orainizio),1,t380.data,t380.data + 1),'ddmmyyyy')||to_char(t350.orafine,'hh24mi'),'ddmmyyyyhh24mi') orafine
from t380_pianifreperib t380, t350_regreperib t350
where t350.codice = t380.turno1
union
select t380.progressivo,t380.data,
       to_date(to_char(t380.data,'ddmmyyyy')||to_char(t350.orainizio,'hh24mi'),'ddmmyyyyhh24mi') orainizio,
       to_date(to_char(decode(sign(orafine - orainizio),1,t380.data,t380.data + 1),'ddmmyyyy')||to_char(t350.orafine,'hh24mi'),'ddmmyyyyhh24mi') orafine
from t380_pianifreperib t380, t350_regreperib t350
where t350.codice = t380.turno2
union
select t380.progressivo,t380.data,
       to_date(to_char(t380.data,'ddmmyyyy')||to_char(t350.orainizio,'hh24mi'),'ddmmyyyyhh24mi') orainizio,
       to_date(to_char(decode(sign(orafine - orainizio),1,t380.data,t380.data + 1),'ddmmyyyy')||to_char(t350.orafine,'hh24mi'),'ddmmyyyyhh24mi') orafine
from t380_pianifreperib t380, t350_regreperib t350
where t350.codice = t380.turno3;

create or replace view VT134_ORELIQUIDATEANNIPREC
 (PROGRESSIVO24, 
  VAP_ANNO_COMPETENZA, 
  VAP_DATA_VARIAZIONE, 
  VAP_ORE_LIQUIDATE, 
  VAP_VARIAZIONE_SALDO, 
  VAP_ORE_PERSE, 
  VAP_SALDO_ANNUO,
  VAP_TOT_VARIAZ_SALDI,
  VAP_TOT_ORE_PERSE,
  VAP_TOT_VARIAZ_ORE_PERSE,
  VAP_RESIDUO_ORE_PERSE,
  VAP_NOTE)
as select 
  PROGRESSIVO, 
  ANNO, 
  DATA, 
  OREMINUTI(ORE_LIQUIDATE), 
  OREMINUTI(VARIAZIONE_ORE), 
  OREPERSE,
  0,
  T134F_SOMMA_VARIAZIONI(PROGRESSIVO,ANNO,'N'),
  0,
  T134F_SOMMA_VARIAZIONI(PROGRESSIVO,ANNO,'S'),
  0,
  NOTE
from T134_ORELIQUIDATEANNIPREC;

create or replace view VT325_RICHIESTESTR_GG as
select
  T325.ID ID_T325, T325.PROGRESSIVO, T325.DATA, T325.TIMBRATURE, T325.ORE_LORDE, T325.ORE_CONTEGGIATE, T325.DEBITO, T325.DETR_MENSA, T325.RITARDO,
  T326.TIPO, T326.ECCEDENZA, T326.SPEZ, T326.CAUS_ORIG, T326.SPEZ_DALLE1, T326.SPEZ_ALLE1, T326.CAUS1, T326.SPEZ_DALLE2, T326.SPEZ_ALLE2, T326.CAUS2, T326.SPEZ_DALLE3, T326.SPEZ_ALLE3, T326.CAUS3, null MOTIVAZIONE,
  T326.ID_T850 ID, T326.ROWID ROWID_T
from T325_RICHIESTESTR_GG T325, T326_RICHIESTESTR_SPEZ T326
where T325.ID = T326.ID;

create or replace view vt325_richiestestr_gg_eu as
select
  nvl(T326E.ID_T850,T326U.ID_T850) ID, T325.ID ID_T325, T325.PROGRESSIVO, T325.DATA, T325.TIMBRATURE, T325.ORE_LORDE, T325.ORE_CONTEGGIATE, T325.DEBITO, T325.DETR_MENSA, T325.RITARDO,
  T326E.TIPO TIPO_E, T326E.ECCEDENZA ECCEDENZA_E, T326E.SPEZ SPEZ_E,
  T326E.SPEZ_DALLE1 SPEZ_DALLE1_E, T326E.SPEZ_ALLE1 SPEZ_ALLE1_E, T326E.CAUS1 CAUS1_E, T326E.CAUS_ORIG CAUS_ORIG_E, T326E.AUTORIZZAZIONE AUTORIZZAZIONE_E, null MOTIVAZIONE_E, T326E.ROWID ROWID_E,
  T326U.TIPO TIPO_U, T326U.ECCEDENZA ECCEDENZA_U, T326U.SPEZ SPEZ_U,
  T326U.SPEZ_DALLE1 SPEZ_DALLE1_U, T326U.SPEZ_ALLE1 SPEZ_ALLE1_U, T326U.CAUS1 CAUS1_U, T326U.CAUS_ORIG CAUS_ORIG_U, T326U.AUTORIZZAZIONE AUTORIZZAZIONE_U, null MOTIVAZIONE_U, T326U.ROWID ROWID_U,
  null MOTIVAZIONE
from  T325_RICHIESTESTR_GG T325, T326_RICHIESTESTR_SPEZ T326E, T326_RICHIESTESTR_SPEZ T326U
where T325.ID = T326E.ID(+) and T326E.TIPO(+) = 'E'
and   T325.ID = T326U.ID(+) and T326U.TIPO(+) = 'U';

create or replace view VT325_ID_T850 as
select /*+ ordered*/
  T326.ID_T850 ID, 
  T325.ID ID_T325, PROGRESSIVO
from  T325_RICHIESTESTR_GG T325, T326_RICHIESTESTR_SPEZ T326
where T325.ID = T326.ID and T326.TIPO = 'E'
union 
select /*+ ordered*/
  T326.ID_T850 ID, 
  T325.ID ID_T325, PROGRESSIVO
from  T325_RICHIESTESTR_GG T325, T326_RICHIESTESTR_SPEZ T326
where T325.ID = T326.ID and T326.TIPO = 'U';

create or replace view vt050_iter_richiesteassenza as
select
  T050.PROGRESSIVO    PROGRESSIVO,
  T050.CAUSALE        T050CAUSALE,
  T050.TIPOGIUST      T050TIPOGIUST,
  T050.DAL            T050DAL,
  T050.AL             T050AL,
  T050.NUMEROORE      T050NUMEROORE,
  T050.AORE           T050AORE,
  T050.DATANAS        T050DATANAS,
  T050.NUMEROORE_PREV   T050NUMEROORE_PREV,
  T050.AORE_PREV      T050AORE_PREV,
  T050.ELABORATO      T050ELABORATO,
  T850.ITER                T850ITER,
  T850.COD_ITER            T850COD_ITER,
  T850.ID                  T850ID,
  T850.DATA                T850DATA,
  T850.RICHIEDENTE         T850RICHIEDENTE,
  T850.STATO               T850STATO,
  T850.NOTE                T850NOTE,
  T850.TIPO_RICHIESTA      T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N') T850CONDIZ_ALLEGATI,
  T850.ID_REVOCA           T850ID_REVOCA,
  T850.ID_REVOCATO         T850ID_REVOCATO
from T050_RICHIESTEASSENZA T050, T850_ITER_RICHIESTE T850
where T050.ID = T850.ID;

create or replace view vm140_iter_richieste_missioni as
select
  M140.PROGRESSIVO         PROGRESSIVO,
  M140.FLAG_DESTINAZIONE   M140FLAG_DESTINAZIONE,
  M140.FLAG_ISPETTIVA      M140FLAG_ISPETTIVA,
  M140.DATADA              M140DATADA,
  M140.DATAA               M140DATAA,
  M140.ORADA               M140ORADA,
  M140.ORAA                M140ORAA,
  M140.PROTOCOLLO          M140PROTOCOLLO,
  M140.FLAG_TIPOACCREDITO  M140FLAG_TIPOACCREDITO,
  M140.DELEGATO            M140DELEGATO,
  M140.TIPOREGISTRAZIONE   M140TIPOREGISTRAZIONE,
  M140.ANNULLAMENTO        M140ANNULLAMENTO,
  M140.FLAG_PERCORSO       M140FLAG_PERCORSO,
  M140.MISSIONE_RIAPERTA   M140MISSIONE_RIAPERTA,
  T850.ITER                T850ITER,
  T850.COD_ITER            T850COD_ITER,
  T850.ID                  T850ID,
  T850.DATA                T850DATA,
  T850.RICHIEDENTE         T850RICHIEDENTE,
  T850.STATO               T850STATO,
  T850.NOTE                T850NOTE,
  T850.TIPO_RICHIESTA      T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N')  T850CONDIZ_ALLEGATI,
  T850.ID_REVOCA           T850ID_REVOCA,
  T850.ID_REVOCATO         T850ID_REVOCATO
from M140_RICHIESTE_MISSIONI M140, T850_ITER_RICHIESTE T850
where M140.ID = T850.ID;

create or replace view vt065_iter_richiestestraord as
select
  T065.PROGRESSIVO          PROGRESSIVO,
  T065.DATA                 T065DATA,
  T065.TIPO                 T065TIPO,
  T065.ID_CONGUAGLIO        T065ID_CONGUAGLIO,
  T065.ORE_ECCED_CALC       T065ORE_ECCED_CALC,
  T065.ORE_ECCEDENTI        T065ORE_ECCEDENTI,
  T065.ORE_DACOMPENSARE     T065ORE_DACOMPENSARE,
  T065.ORE_DALIQUIDARE      T065ORE_DALIQUIDARE,
  T065.CAUSALE              T065CAUSALE,
  T065.ORE_CAUSALIZZATE     T065ORE_CAUSALIZZATE,
  T065.MIN_ORE_DALIQUIDARE  T065MIN_ORE_DALIQUIDARE,
  T065.MIN_ORE_DACOMPENSARE T065MIN_ORE_DACOMPENSARE,
  T850.ITER                 T850ITER,
  T850.COD_ITER             T850COD_ITER,
  T850.ID                   T850ID,
  T850.DATA                 T850DATA,
  T850.RICHIEDENTE          T850RICHIEDENTE,
  T850.STATO                T850STATO,
  T850.NOTE                 T850NOTE,
  T850.TIPO_RICHIESTA       T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA  T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N')  T850CONDIZ_ALLEGATI,
  T850.ID_REVOCA            T850ID_REVOCA,
  T850.ID_REVOCATO          T850ID_REVOCATO
from T065_RICHIESTESTRAORDINARI T065, T850_ITER_RICHIESTE T850
where T065.ID = T850.ID;

create or replace view vt085_iter_richiestecambiorari as
select
  T085.PROGRESSIVO         PROGRESSIVO,
  T085.DATA                T085DATA_ORARIO,
  T085.TIPOGIORNO          T085TIPOGIORNO,
  T085.ORARIO              T085GIORNO,
  T085.DATA_INVER          T085DATA_INVER,
  T085.TIPOGIORNO_INVER    T085TIPOGIORNO_INVER,
  T085.ORARIO_INVER        T085ORARIO_INVER,
  T085.SOLO_NOTE           T085SOLO_NOTE,
  T850.ITER                T850ITER,
  T850.COD_ITER            T850COD_ITER,
  T850.ID                  T850ID,
  T850.DATA                T850DATA,
  T850.RICHIEDENTE         T850RICHIEDENTE,
  T850.STATO               T850STATO,
  T850.NOTE                T850NOTE,
  T850.TIPO_RICHIESTA      T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N')  T850CONDIZ_ALLEGATI,
  T850.ID_REVOCA           T850ID_REVOCA,
  T850.ID_REVOCATO         T850ID_REVOCATO
from T085_RICHIESTECAMBIORARI T085, T850_ITER_RICHIESTE T850
where T085.ID = T850.ID;

create or replace view vt105_iter_richiestetimbrature as
select
  T105.PROGRESSIVO     PROGRESSIVO,
  T105.DATA            T105DATA,
  T105.ORA             T105ORA,
  T105.VERSO           T105VERSO,
  T105.CAUSALE         T105CAUSALE,
  T105.RILEVATORE_RICH T105RILEVATORE_RICH,
  T105.OPERAZIONE      T105OPERAZIONE,
  T105.CAUSALE_ORIG    T105CAUSALE_ORIG,
  T105.VERSO_ORIG      T105VERSO_ORIG,
  T105.RILEVATORE_ORIG T105RILEVATORE_ORIG,
  T105.MOTIVAZIONE     T105MOTIVAZIONE,
  T105.ELABORATO       T105ELABORATO,
  T850.ITER                T850ITER,
  T850.COD_ITER            T850COD_ITER,
  T850.ID                  T850ID,
  T850.DATA                T850DATA,
  T850.RICHIEDENTE         T850RICHIEDENTE,
  T850.STATO               T850STATO,
  T850.NOTE                T850NOTE,
  T850.TIPO_RICHIESTA      T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N') T850CONDIZ_ALLEGATI,
  T850.ID_REVOCA           T850ID_REVOCA,
  T850.ID_REVOCATO         T850ID_REVOCATO
from T105_RICHIESTETIMBRATURE T105, T850_ITER_RICHIESTE T850
where T105.ID = T850.ID;

create or replace view vt325_iter_richiestestr_gg as
select
  VT325.ID_T325              VT325ID_T325,
  VT325.PROGRESSIVO          PROGRESSIVO,
  VT325.DATA                 VT325DATA,
  VT325.TIMBRATURE           VT325TIMBRATURE,
  VT325.ORE_LORDE            VT325ORE_LORDE,
  VT325.ORE_CONTEGGIATE      VT325ORE_CONTEGGIATE,
  VT325.DEBITO               VT325DEBITO,
  VT325.DETR_MENSA           VT325DETR_MENSA,
  VT325.RITARDO              VT325RITARDO,
  VT325.TIPO                 VT325TIPO,
  VT325.ECCEDENZA            VT325ECCEDENZA,
  VT325.SPEZ                 VT325SPEZ,
  VT325.CAUS_ORIG            VT325CAUS_ORIG,
  VT325.SPEZ_DALLE1          VT325SPEZ_DALLE1,
  VT325.SPEZ_ALLE1           VT325SPEZ_ALLE1,
  VT325.CAUS1                VT325CAUS1,
  VT325.SPEZ_DALLE2          VT325SPEZ_DALLE2,
  VT325.SPEZ_ALLE2           VT325SPEZ_ALLE2,
  VT325.CAUS2                VT325CAUS2,
  VT325.SPEZ_DALLE3          VT325SPEZ_DALLE3,
  VT325.SPEZ_ALLE3           VT325SPEZ_ALLE3,
  VT325.CAUS3                VT325CAUS3,
  VT325.MOTIVAZIONE          VT325MOTIVAZIONE,
  T850.ITER                  T850ITER,
  T850.COD_ITER              T850COD_ITER,
  T850.ID                    T850ID,
  T850.DATA                  T850DATA,
  T850.RICHIEDENTE           T850RICHIEDENTE,
  T850.NOTE                  T850NOTE,
  T850.STATO                 T850STATO,
  T850.TIPO_RICHIESTA        T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA   T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N')  T850CONDIZ_ALLEGATI,
  T850.ID_REVOCA             T850ID_REVOCA,
  T850.ID_REVOCATO           T850ID_REVOCATO
from VT325_RICHIESTESTR_GG VT325, T850_ITER_RICHIESTE T850
where VT325.ID = T850.ID;

create or replace view vt860_iter_stampacartellini as
select
  T860.PROGRESSIVO         PROGRESSIVO,
  T860.MESE_CARTELLINO     T860MESE_CARTELLINO,
  T850.ITER                T850ITER,
  T850.COD_ITER            T850COD_ITER,
  T850.ID                  T850ID,
  T850.DATA                T850DATA,
  T850.RICHIEDENTE         T850RICHIEDENTE,
  T850.STATO               T850STATO,
  T850.NOTE                T850NOTE,
  T850.TIPO_RICHIESTA      T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N')  T850CONDIZ_ALLEGATI,
  T850.ID_REVOCA           T850ID_REVOCA,
  T850.ID_REVOCATO         T850ID_REVOCATO
from T860_ITER_STAMPACARTELLINI T860, T850_ITER_RICHIESTE T850
where T860.ID = T850.ID;

create or replace view vt251_iter_richiestescioperi as
select
  VT251.PROGRESSIVO              PROGRESSIVO,
  VT251.DATA                     VT251DATA_SCIOPERO,
  VT251.ID_T250                  VT251ID_T250,
  VT251.CAUSALE                  VT251CAUSALE,
  VT251.D_CAUSALE                VT251D_CAUSALE,
  VT251.TIPOGIUST                VT251TIPOGIUST,
  VT251.DAORE                    VT251DAORE,
  VT251.AORE                     VT251AORE,
  VT251.SELEZIONE_ANAGRAFICA     VT251SELEZIONE_ANAGRAFICA,
  VT251.MINIMO                   VT251MINIMO,
  T850.ITER                      T850ITER,
  T850.COD_ITER                  T850COD_ITER,
  T850.ID                        T850ID,
  T850.DATA                      T850DATA,
  T850.RICHIEDENTE               T850RICHIEDENTE,
  T850.NOTE                      T850NOTE,
  T850.STATO                     T850STATO,
  T850.TIPO_RICHIESTA            T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA       T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N')   T850CONDIZ_ALLEGATI,
  T850.ID_REVOCA                 T850ID_REVOCA,
  T850.ID_REVOCATO               T850ID_REVOCATO
from VT251_RICHIESTESCIOPERI VT251, T850_ITER_RICHIESTE T850
where VT251.ID = T850.ID;

create or replace view VT325_ITER_RICHIESTESTR_GG_EU as
select
  VT325.ID_T325            VT325ID_T325,
  VT325.DATA               VT325DATA,
  VT325.PROGRESSIVO        PROGRESSIVO,
  VT325.TIMBRATURE         VT325TIMBRATURE,
  VT325.ORE_LORDE          VT325ORE_LORDE,
  VT325.ORE_CONTEGGIATE    VT325ORE_CONTEGGIATE,
  VT325.DEBITO             VT325DEBITO,
  VT325.DETR_MENSA         VT325DETR_MENSA,
  VT325.RITARDO            VT325RITARDO,
  VT325.MOTIVAZIONE        VT325MOTIVAZIONE,
  VT325.TIPO_E             VT325TIPO_E,
  VT325.ECCEDENZA_E        VT325ECCEDENZA_E,
  VT325.SPEZ_E             VT325SPEZ_E,
  VT325.SPEZ_DALLE1_E      VT325SPEZ_DALLE1_E,
  VT325.SPEZ_ALLE1_E       VT325SPEZ_ALLE1_E,
  VT325.CAUS1_E            VT325CAUS1_E,
  VT325.CAUS_ORIG_E        VT325CAUS_ORIG_E,
  VT325.AUTORIZZAZIONE_E   VT325AUTORIZZAZIONE_E,
  VT325.MOTIVAZIONE_E      VT325MOTIVAZIONE_E,
  VT325.TIPO_U             VT325TIPO_U,
  VT325.ECCEDENZA_U        VT325ECCEDENZA_U,
  VT325.SPEZ_U             VT325SPEZ_U,
  VT325.SPEZ_DALLE1_U      VT325SPEZ_DALLE1_U,
  VT325.SPEZ_ALLE1_U       VT325SPEZ_ALLE1_U,
  VT325.CAUS1_U            VT325CAUS1_U,
  VT325.CAUS_ORIG_U        VT325CAUS_ORIG_U,
  VT325.AUTORIZZAZIONE_U   VT325AUTORIZZAZIONE_U,
  VT325.MOTIVAZIONE_U      VT325MOTIVAZIONE_U,
  T850.ID                  T850ID,
  T850.DATA                T850DATA,
  T850.RICHIEDENTE         T850RICHIEDENTE,
  T850.NOTE                T850NOTE,
  T850.STATO               T850STATO,
  T850.TIPO_RICHIESTA      T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N')	T850CONDIZ_ALLEGATI,  
  T850.ID_REVOCA           T850ID_REVOCA,
  T850.ID_REVOCATO         T850ID_REVOCATO,
  T850.ITER                T850ITER,
  T850.COD_ITER            T850COD_ITER
from VT325_RICHIESTESTR_GG_EU VT325, T850_ITER_RICHIESTE T850
where VT325.ID = T850.ID;

create or replace view VT755_ITER_RICHIESTERENDICONTO as
select
  T755.PROGRESSIVO         PROGRESSIVO,
  T755.DATA                T755DATA,
  T755.ORE                 T755ORE,
  T850.ITER                T850ITER,
  T850.COD_ITER            T850COD_ITER,
  T850.ID                  T850ID,
  T850.DATA                T850DATA,
  T850.RICHIEDENTE         T850RICHIEDENTE,
  T850.STATO               T850STATO,
  T850.NOTE                T850NOTE,
  T850.TIPO_RICHIESTA      T850TIPO_RICHIESTA,
  T850.AUTORIZZ_AUTOMATICA T850AUTORIZZ_AUTOMATICA,
  nvl(T850.CONDIZ_ALLEGATI,'N') T850CONDIZ_ALLEGATI,
  T850.ID_REVOCA           T850ID_REVOCA,
  T850.ID_REVOCATO         T850ID_REVOCATO
from T755_RICHIESTE_RENDICONTO T755, T850_ITER_RICHIESTE T850
where T755.ID = T850.ID;
